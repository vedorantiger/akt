# config/database.py
"""–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
import os
from pathlib import Path
from sqlmodel import create_engine, SQLModel, Session
from sqlalchemy.engine import Engine
from sqlalchemy import event
from rich.console import Console

# Rich –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤–∏–≤–æ–¥—É
console = Console()

# –ü—Ä–æ—Å—Ç–∏–π —à–ª—è—Ö –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
BASE_DIR = Path(__file__).parent.parent
DATABASE_DIR = BASE_DIR / "database"
DATABASE_DIR.mkdir(exist_ok=True)

DATABASE_URL = f"sqlite:///{DATABASE_DIR / 'fitness_crm.db'}"
engine = create_engine(
    DATABASE_URL,
    connect_args={"check_same_thread": False},
    echo=False  # –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å True –¥–ª—è –¥–µ–±–∞–≥—É SQL
)


# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è SQLite
@event.listens_for(Engine, "connect")
def set_sqlite_pragma(dbapi_connection, connection_record):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SQLite –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ"""
    cursor = dbapi_connection.cursor()
    cursor.execute("PRAGMA foreign_keys=ON")
    cursor.execute("PRAGMA journal_mode=WAL")
    cursor.execute("PRAGMA synchronous=NORMAL")
    cursor.close()
    console.print("[bold blue]üîß –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ SQLite PRAGMA[/bold blue]")


def init_db():
    """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ –º–æ–¥–µ–ª—ñ
        from models.client import Client  # noqa: F401
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ
        SQLModel.metadata.create_all(engine)
        console.print("[bold green]‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ![/bold green]")
        
    except Exception as e:
        console.print(f"[bold red]‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}[/bold red]")
        raise


def get_session() -> Session:
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–µ—Å—ñ—é –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ë–î"""
    try:
        session = Session(engine)
        return session
    except Exception as e:
        console.print(f"[bold red]‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Å—ñ—ó: {e}[/bold red]")
        raise


def test_connection():
    """–¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö"""
    try:
        with get_session() as session:
            from sqlalchemy import text
            session.execute(text("SELECT 1"))
            console.print("[bold green]‚úÖ –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–µ[/bold green]")
            return True
    except Exception as e:
        console.print(f"[bold red]‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö: {e}[/bold red]")
        return False


# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ë–î –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ
db_file = DATABASE_DIR / "fitness_crm.db"
if not db_file.exists():
    console.print("[bold cyan]üÜï –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –±–∞–∑—É –¥–∞–Ω–∏—Ö[/bold cyan]")
    init_db()
else:
    console.print("[bold cyan]üìÇ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á—É –±–∞–∑—É –¥–∞–Ω–∏—Ö[/bold cyan]")
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
    test_connection()