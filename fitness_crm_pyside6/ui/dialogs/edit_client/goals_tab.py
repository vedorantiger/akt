# ui/dialogs/edit_client/goals_tab.py
"""–í–∫–ª–∞–¥–∫–∞ —Ü—ñ–ª–µ–π —Ç–∞ –ø–ª–∞–Ω—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞"""
from PySide6.QtWidgets import (QWidget, QVBoxLayout, QFormLayout, QGroupBox, 
                               QScrollArea, QCheckBox, QGridLayout)
from qfluentwidgets import TextEdit, SpinBox, ComboBox


class GoalsTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ —Ü—ñ–ª–µ–π —Ç–∞ –ø–ª–∞–Ω—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞"""
    
    def __init__(self, client_data=None, parent=None):
        super().__init__(parent)
        self.client_data = client_data or {}
        self._init_ui()
        self._load_data()
    
    def _init_ui(self):
        """–°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏"""
        scroll = QScrollArea(self)
        scroll.setWidgetResizable(True)
        scroll.setStyleSheet("QScrollArea { border: none; background: transparent; }")
        
        main_widget = QWidget()
        scroll.setWidget(main_widget)
        
        main_layout = QVBoxLayout(self)
        main_layout.addWidget(scroll)
        
        content_layout = QVBoxLayout(main_widget)
        content_layout.setContentsMargins(20, 20, 20, 20)
        content_layout.setSpacing(20)
        
        # ===== –¶–Ü–õ–Ü =====
        goals_group = QGroupBox("üéØ –ü–æ—Å—Ç–∞–≤–ª–µ–Ω—ñ —Ü—ñ–ª—ñ")
        goals_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(goals_group)
        
        goals_form = QFormLayout(goals_group)
        goals_form.setSpacing(15)
        goals_form.setContentsMargins(20, 25, 20, 20)
        
        self.goals_edit = TextEdit()
        self.goals_edit.setPlaceholderText("–î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ñ—ñ—Ç–Ω–µ—Å-—Ü—ñ–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞")
        self.goals_edit.setMinimumHeight(120)
        goals_form.addRow("üìù –¶—ñ–ª—ñ –∫–ª—ñ—î–Ω—Ç–∞:", self.goals_edit)
        
        # ===== –ü–õ–ê–ù–ò –¢–†–ï–ù–£–í–ê–ù–¨ =====
        training_group = QGroupBox("üí™ –ü–ª–∞–Ω–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å")
        training_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(training_group)
        
        training_form = QFormLayout(training_group)
        training_form.setSpacing(15)
        training_form.setContentsMargins(20, 25, 20, 20)
        
        self.workouts_per_week_spin = SpinBox()
        self.workouts_per_week_spin.setRange(1, 7)
        self.workouts_per_week_spin.setValue(3)
        self.workouts_per_week_spin.setSuffix(" —Ç—Ä–µ–Ω—É–≤–∞–Ω—å")
        self.workouts_per_week_spin.setMinimumHeight(40)
        training_form.addRow("üìÖ –¢—Ä–µ–Ω—É–≤–∞–Ω—å –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:", self.workouts_per_week_spin)
        
        self.preferred_training_combo = ComboBox()
        self.preferred_training_combo.addItems([
            "–ì—Ä—É–ø–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "–ë–µ–∑ —Ä—ñ–∑–Ω–∏—Ü—ñ"
        ])
        self.preferred_training_combo.setMinimumHeight(40)
        training_form.addRow("üë• –ë–∞–∂–∞–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è:", self.preferred_training_combo)
        
        # ===== –í–ò–î–ò –ê–ö–¢–ò–í–ù–û–°–¢–Ü =====
        activities_group = QGroupBox("üèÉ –ë–∞–∂–∞–Ω—ñ –≤–∏–¥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
        activities_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(activities_group)
        
        activities_layout = QVBoxLayout(activities_group)
        activities_layout.setContentsMargins(20, 25, 20, 20)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—ñ—Ç–∫—É —á–µ–∫–±–æ–∫—Å—ñ–≤ –¥–ª—è –≤–∏–¥—ñ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        activities_grid = QGridLayout()
        
        self.activity_checkboxes = {}
        activities = [
            "üí™ –°–∏–ª–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "üèÉ –ö–∞—Ä–¥—ñ–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "üßò –ü—ñ–ª–∞—Ç–µ—Å",
            "ü§∏ –ö—Ä–æ—Å—Ñ—ñ—Ç",
            "ü•ä –ë–æ–∫—Å",
            "ü§æ –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "üèä –ü–ª–∞–≤–∞–Ω–Ω—è",
            "üö¥ –í–µ–ª–æ—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
            "ü§≤ –ô–æ–≥–∞",
            "üíÉ –¢–∞–Ω—Ü—ñ",
            "üèê –ö–æ–º–∞–Ω–¥–Ω—ñ –≤–∏–¥–∏ —Å–ø–æ—Ä—Ç—É",
            "üèÉ‚Äç‚ôÄÔ∏è –ë—ñ–≥",
            "ü§∏‚Äç‚ôÄÔ∏è –ì—ñ–º–Ω–∞—Å—Ç–∏–∫–∞",
            "üèãÔ∏è –ü–∞—É–µ—Ä–ª—ñ—Ñ—Ç–∏–Ω–≥",
            "üßó –°–∫–µ–ª–µ–ª–∞–∑—ñ–Ω–Ω—è",
            "üèÑ –°–µ—Ä—Ñ—ñ–Ω–≥/–°–∫–µ–π—Ç"
        ]
        
        for i, activity in enumerate(activities):
            checkbox = QCheckBox(activity)
            checkbox.setStyleSheet("""
                QCheckBox {
                    font-size: 14px;
                    color: #374151;
                    spacing: 8px;
                }
                QCheckBox::indicator {
                    width: 18px;
                    height: 18px;
                    border-radius: 4px;
                    border: 2px solid #D1D5DB;
                }
                QCheckBox::indicator:checked {
                    background-color: #3B82F6;
                    border-color: #3B82F6;
                }
            """)
            row = i // 4
            col = i % 4
            activities_grid.addWidget(checkbox, row, col)
            self.activity_checkboxes[activity] = checkbox
        
        activities_layout.addLayout(activities_grid)
        
        # ===== –ù–û–¢–ê–¢–ö–ò –¢–†–ï–ù–ï–†–ê =====
        notes_group = QGroupBox("üìù –ù–æ—Ç–∞—Ç–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–∞")
        notes_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(notes_group)
        
        notes_form = QFormLayout(notes_group)
        notes_form.setSpacing(15)
        notes_form.setContentsMargins(20, 25, 20, 20)
        
        self.trainer_notes_edit = TextEdit()
        self.trainer_notes_edit.setPlaceholderText("–î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–æ—Ç–∞—Ç–∫–∏ —Ç–∞ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç—Ä–µ–Ω–µ—Ä–∞")
        self.trainer_notes_edit.setMinimumHeight(120)
        notes_form.addRow("üí≠ –ù–æ—Ç–∞—Ç–∫–∏:", self.trainer_notes_edit)
        
        content_layout.addStretch()
    
    def _get_group_style(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∏–ª—å –¥–ª—è –≥—Ä—É–ø–∏"""
        return """
            QGroupBox {
                font-size: 16px;
                font-weight: 600;
                color: #111827;
                border: 2px solid #E5E7EB;
                border-radius: 8px;
                padding-top: 10px;
                margin-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 8px 0 8px;
                background-color: white;
            }
        """
    
    def _load_data(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞"""
        if not self.client_data:
            return
        
        self.goals_edit.setText(self.client_data.get('goals', ''))
        self.workouts_per_week_spin.setValue(self.client_data.get('workouts_per_week', 3))
        
        preferred_training = self.client_data.get('preferred_training', '')
        if preferred_training in ['–ì—Ä—É–ø–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è', '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è', '–ë–µ–∑ —Ä—ñ–∑–Ω–∏—Ü—ñ']:
            self.preferred_training_combo.setCurrentText(preferred_training)
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ –≤–∏–¥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        selected_activities = self.client_data.get('selected_activities', [])
        for activity, checkbox in self.activity_checkboxes.items():
            checkbox.setChecked(activity in selected_activities)
        
        self.trainer_notes_edit.setText(self.client_data.get('trainer_notes', ''))
    
    def get_data(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –≤–∫–ª–∞–¥–∫–∏"""
        # –ó–±–∏—Ä–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ –≤–∏–¥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        selected_activities = []
        for activity, checkbox in self.activity_checkboxes.items():
            if checkbox.isChecked():
                selected_activities.append(activity)
        
        return {
            'goals': self.goals_edit.toPlainText().strip(),
            'workouts_per_week': self.workouts_per_week_spin.value(),
            'preferred_training': self.preferred_training_combo.currentText(),
            'selected_activities': selected_activities,
            'trainer_notes': self.trainer_notes_edit.toPlainText().strip()
        }
