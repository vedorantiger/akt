# ui/dialogs/edit_client/physical_tab.py
"""–í–∫–ª–∞–¥–∫–∞ —Ñ—ñ–∑–∏—á–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏"""
import math
from datetime import datetime, date
from PySide6.QtCore import QDate, Qt, Signal
from PySide6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QFormLayout, 
                               QGroupBox, QScrollArea, QLabel, QFrame)
from qfluentwidgets import LineEdit, ComboBox, DateEdit, SpinBox, DoubleSpinBox
from utils.calculations import FitnessCalculator


class PhysicalTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ —Ñ—ñ–∑–∏—á–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏"""
    
    # –°–∏–≥–Ω–∞–ª–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –º—ñ–∂ –≤–∫–ª–∞–¥–∫–∞–º–∏
    weight_changed = Signal(float)
    
    def __init__(self, client_data=None, parent=None):
        super().__init__(parent)
        self.client_data = client_data or {}
        self.parent_dialog = parent  # –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —ñ–Ω—à–∏—Ö –≤–∫–ª–∞–¥–æ–∫
        self._init_ui()
        self._load_data()
        self._setup_calculations()
    
    def _init_ui(self):
        """–°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏"""
        # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –≤–µ–ª–∏–∫–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–ª—ñ–≤
        scroll = QScrollArea(self)
        scroll.setWidgetResizable(True)
        scroll.setStyleSheet("QScrollArea { border: none; background: transparent; }")
        
        main_widget = QWidget()
        scroll.setWidget(main_widget)
        
        main_layout = QVBoxLayout(self)
        main_layout.addWidget(scroll)
        
        content_layout = QVBoxLayout(main_widget)
        content_layout.setContentsMargins(20, 20, 20, 20)
        content_layout.setSpacing(20)
        
        # ===== –û–°–ù–û–í–ù–Ü –ü–ê–†–ê–ú–ï–¢–†–ò =====
        basic_group = QGroupBox("üìè –û—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏")
        basic_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(basic_group)
        
        basic_form = QFormLayout(basic_group)
        basic_form.setSpacing(15)
        basic_form.setContentsMargins(20, 25, 20, 20)
        
        # –ó—Ä—ñ—Å—Ç
        self.height_spin = SpinBox()
        self.height_spin.setRange(0, 250)
        self.height_spin.setSuffix(" —Å–º")
        self.height_spin.setValue(0)  # –ü–£–°–¢–ï –ø–æ–ª–µ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º –≤–≤–µ–¥–µ
        self.height_spin.setMinimumHeight(40)
        self.height_spin.valueChanged.connect(self._update_calculations)
        basic_form.addRow("üìê –ó—Ä—ñ—Å—Ç:", self.height_spin)
        
        # –í–∞–≥–∞
        self.weight_spin = DoubleSpinBox()
        self.weight_spin.setRange(0.0, 300.0)
        self.weight_spin.setDecimals(1)
        self.weight_spin.setSuffix(" –∫–≥")
        self.weight_spin.setValue(0.0)  # –ü–£–°–¢–ï –ø–æ–ª–µ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º –≤–≤–µ–¥–µ
        self.weight_spin.setMinimumHeight(40)
        self.weight_spin.valueChanged.connect(self._on_weight_changed)
        self.weight_spin.valueChanged.connect(self._update_calculations)
        basic_form.addRow("‚öñÔ∏è –í–∞–≥–∞:", self.weight_spin)
        
        # ===== –°–ï–†–¶–ï–í–û-–°–£–î–ò–ù–ù–Ü –ü–û–ö–ê–ó–ù–ò–ö–ò =====
        cardio_group = QGroupBox("‚ù§Ô∏è –°–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏")
        cardio_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(cardio_group)
        
        cardio_form = QFormLayout(cardio_group)
        cardio_form.setSpacing(15)
        cardio_form.setContentsMargins(20, 25, 20, 20)
        
        # –ê—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫ (–≤–µ—Ä—Ö–Ω—ñ–π/–Ω–∏–∂–Ω—ñ–π)
        pressure_layout = QHBoxLayout()
        pressure_layout.setSpacing(10)
        
        # –í–µ—Ä—Ö–Ω—ñ–π —Ç–∏—Å–∫
        upper_layout = QVBoxLayout()
        upper_label = QLabel("–í–µ—Ä—Ö–Ω—ñ–π")
        upper_label.setStyleSheet("font-weight: 600; color: #374151;")
        upper_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.bp_systolic_spin = SpinBox()
        self.bp_systolic_spin.setRange(0, 200)
        self.bp_systolic_spin.setValue(0)  # –ü–£–°–¢–ï –ø–æ–ª–µ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º –≤–≤–µ–¥–µ
        self.bp_systolic_spin.setSuffix(" –º–º.—Ä—Ç.—Å—Ç")
        self.bp_systolic_spin.setMinimumHeight(40)
        self.bp_systolic_spin.setFixedWidth(150)
        self.bp_systolic_spin.valueChanged.connect(self._update_calculations)
        upper_layout.addWidget(upper_label)
        upper_layout.addWidget(self.bp_systolic_spin)
        
        # –†–æ–∑–¥—ñ–ª—å–Ω–∏–∫
        separator = QLabel("/")
        separator.setStyleSheet("font-size: 24px; font-weight: bold; color: #6B7280;")
        separator.setAlignment(Qt.AlignmentFlag.AlignCenter)
        separator.setFixedWidth(20)
        
        # –ù–∏–∂–Ω—ñ–π —Ç–∏—Å–∫
        lower_layout = QVBoxLayout()
        lower_label = QLabel("–ù–∏–∂–Ω—ñ–π")
        lower_label.setStyleSheet("font-weight: 600; color: #374151;")
        lower_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.bp_diastolic_spin = SpinBox()
        self.bp_diastolic_spin.setRange(0, 150)
        self.bp_diastolic_spin.setValue(0)  # –ü–£–°–¢–ï –ø–æ–ª–µ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º –≤–≤–µ–¥–µ
        self.bp_diastolic_spin.setSuffix(" –º–º.—Ä—Ç.—Å—Ç")
        self.bp_diastolic_spin.setMinimumHeight(40)
        self.bp_diastolic_spin.setFixedWidth(150)
        self.bp_diastolic_spin.valueChanged.connect(self._update_calculations)
        lower_layout.addWidget(lower_label)
        lower_layout.addWidget(self.bp_diastolic_spin)
        
        pressure_layout.addLayout(upper_layout)
        pressure_layout.addWidget(separator)
        pressure_layout.addLayout(lower_layout)
        pressure_layout.addStretch()
        
        cardio_form.addRow("ü©∫ –ê—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫:", pressure_layout)
        
        # –ß–°–° —É —Å–ø–æ–∫–æ—ó
        self.heart_rate_spin = SpinBox()
        self.heart_rate_spin.setRange(0, 200)
        self.heart_rate_spin.setSuffix(" —É–¥/—Ö–≤")
        self.heart_rate_spin.setValue(0)  # –ü–£–°–¢–ï –ø–æ–ª–µ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º –≤–≤–µ–¥–µ
        self.heart_rate_spin.setMinimumHeight(40)
        self.heart_rate_spin.valueChanged.connect(self._update_calculations)
        cardio_form.addRow("üíì –ß–°–° —É —Å–ø–æ–∫–æ—ó:", self.heart_rate_spin)
        
        # ===== –ú–ï–î–ò–ß–ù–Ü –î–ê–ù–Ü =====
        medical_group = QGroupBox("üè• –ú–µ–¥–∏—á–Ω—ñ –¥–∞–Ω—ñ")
        medical_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(medical_group)
        
        medical_form = QFormLayout(medical_group)
        medical_form.setSpacing(15)
        medical_form.setContentsMargins(20, 25, 20, 20)
        
        # –î–∞—Ç–∞ –º–µ–¥–æ–≥–ª—è–¥—É
        self.medical_exam_date_edit = DateEdit()
        self.medical_exam_date_edit.setDate(QDate.currentDate())
        self.medical_exam_date_edit.setMinimumHeight(40)
        medical_form.addRow("üìÖ –î–∞—Ç–∞ –º–µ–¥–æ–≥–ª—è–¥—É:", self.medical_exam_date_edit)
        
        # –ú–µ–¥–∏—á–Ω–∏–π –¥–æ–∑–≤—ñ–ª
        self.medical_clearance_combo = ComboBox()
        self.medical_clearance_combo.addItems([
            "–ù–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω",
            "–ü–æ—Ç—Ä—ñ–±–µ–Ω", 
            "–Ñ –¥–æ–∑–≤—ñ–ª"
        ])
        self.medical_clearance_combo.setMinimumHeight(40)
        medical_form.addRow("üìã –ú–µ–¥–∏—á–Ω–∏–π –¥–æ–∑–≤—ñ–ª:", self.medical_clearance_combo)
        
        # –°–ø–æ–∂–∏–≤–∞–Ω–Ω—è –≤–æ–¥–∏
        self.water_intake_spin = DoubleSpinBox()
        self.water_intake_spin.setRange(0.5, 10.0)
        self.water_intake_spin.setDecimals(1)
        self.water_intake_spin.setSuffix(" –ª/–¥–µ–Ω—å")
        self.water_intake_spin.setValue(2.0)
        self.water_intake_spin.setMinimumHeight(40)
        medical_form.addRow("üíß –°–ø–æ–∂–∏–≤–∞–Ω–Ω—è –≤–æ–¥–∏:", self.water_intake_spin)
        
        # –¶–∏–∫–ª –º—ñ—Å—è—á–Ω–∏—Ö (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∂—ñ–Ω–æ–∫)
        self.menstrual_cycle_edit = LineEdit()
        self.menstrual_cycle_edit.setPlaceholderText("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–∏–π —Ü–∏–∫–ª")
        self.menstrual_cycle_edit.setMinimumHeight(40)
        self.menstrual_row = medical_form.addRow("üå∏ –¶–∏–∫–ª –º—ñ—Å—è—á–Ω–∏—Ö:", self.menstrual_cycle_edit)
        
        # ===== –†–û–ó–†–ê–•–£–ù–ö–û–í–Ü –ü–û–ö–ê–ó–ù–ò–ö–ò =====
        calculations_group = QGroupBox("üßÆ –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)")
        calculations_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(calculations_group)
        
        calc_layout = QVBoxLayout(calculations_group)
        calc_layout.setContentsMargins(20, 25, 20, 20)
        calc_layout.setSpacing(15)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å—ñ—Ö —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
        self.calculations_container = QWidget()
        self.calculations_layout = QVBoxLayout(self.calculations_container)
        self.calculations_layout.setSpacing(10)
        calc_layout.addWidget(self.calculations_container)
        
        # –ü–æ—á–∞—Ç–∫–æ–≤–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—É—Å—Ç—ñ –ª–µ–π–±–ª–∏ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
        self._create_calculation_displays()
        
    def _create_calculation_displays(self):
        """–°—Ç–≤–æ—Ä—é—î –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤"""
        # –Ü–ú–¢
        self.bmi_display = self._create_calculation_card("üìä –Ü–ú–¢ (–Ü–Ω–¥–µ–∫—Å –ú–∞—Å–∏ –¢—ñ–ª–∞)", "–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥—É")
        
        # –í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É
        self.body_fat_display = self._create_calculation_card("ü•© –í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É –≤ –æ—Ä–≥–∞–Ω—ñ–∑–º—ñ", "–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
        
        # –ú'—è–∑–æ–≤–∞ –º–∞—Å–∞
        self.muscle_mass_display = self._create_calculation_card("üí™ –ú'—è–∑–æ–≤–∞ –º–∞—Å–∞", "–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
        
        # –¢–∏–ø —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏
        self.body_type_display = self._create_calculation_card("üèóÔ∏è –¢–∏–ø —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏", "–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
        
        # BMR
        self.bmr_display = self._create_calculation_card("üî• –ë–∞–∑–∞–ª—å–Ω–∏–π –º–µ—Ç–∞–±–æ–ª—ñ–∑–º (BMR)", "–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
        
        # –î–µ–Ω–Ω–∞ –ø–æ—Ç—Ä–µ–±–∞ –≤ –∫–∞–ª–æ—Ä—ñ—è—Ö
        self.calories_display = self._create_calculation_card("üçΩÔ∏è –î–µ–Ω–Ω–∞ –ø–æ—Ç—Ä–µ–±–∞ –≤ –∫–∞–ª–æ—Ä—ñ—è—Ö", "–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
        self.daily_calories_display = self.calories_display  # –ü—Å–µ–≤–¥–æ–Ω—ñ–º –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
        
        # –Ü–¥–µ–∞–ª—å–Ω–∞ –≤–∞–≥–∞
        self.ideal_weight_display = self._create_calculation_card("‚öñÔ∏è –Ü–¥–µ–∞–ª—å–Ω–∞ –≤–∞–≥–∞", "–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ —Å—Ç–∞—Ç—å")
        
        # –ù–æ—Ä–º–∞ –≤–æ–¥–∏
        self.water_display = self._create_calculation_card("üíß –î–µ–Ω–Ω–∞ –Ω–æ—Ä–º–∞ –≤–æ–¥–∏", "–í–≤–µ–¥—ñ—Ç—å –≤–∞–≥—É")
        
        # –ß–°–° —Å—Ç–∞—Ç—É—Å
        self.hr_status_display = self._create_calculation_card("üíì –°—Ç–∞—Ç—É—Å –ß–°–° —É —Å–ø–æ–∫–æ—ó", "–í–≤–µ–¥—ñ—Ç—å –ß–°–°")
        
        # –ü—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏
        self.hr_zones_display = self._create_calculation_card("üéØ –ü—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å", "–í–≤–µ–¥—ñ—Ç—å –≤—ñ–∫")
    
    def _create_calculation_card(self, title, default_text):
        """–°—Ç–≤–æ—Ä—é—î –∫–∞—Ä—Ç–∫—É –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É"""
        card = QFrame()
        card.setStyleSheet("""
            QFrame {
                background: #F9FAFB;
                border: 1px solid #E5E7EB;
                border-radius: 8px;
                padding: 12px;
                margin: 4px;
            }
        """)
        
        layout = QVBoxLayout(card)
        layout.setContentsMargins(12, 12, 12, 12)
        layout.setSpacing(8)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel(title)
        title_label.setStyleSheet("""
            QLabel {
                font-size: 14px;
                font-weight: 600;
                color: #374151;
                background: transparent;
                border: none;
            }
        """)
        layout.addWidget(title_label)
        
        # –ó–Ω–∞—á–µ–Ω–Ω—è
        value_label = QLabel(default_text)
        value_label.setStyleSheet("""
            QLabel {
                font-size: 13px;
                color: #6B7280;
                background: transparent;
                border: none;
                padding: 4px 0px;
            }
        """)
        value_label.setWordWrap(True)
        layout.addWidget(value_label)
        
        self.calculations_layout.addWidget(card)
        return value_label
    
    def _on_weight_changed(self, value):
        """–û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É –≤–∞–≥–∏ —Ç–∞ —Å–∏–≥–Ω–∞–ª—ñ–∑—É—î —ñ–Ω—à–∏–º –≤–∫–ª–∞–¥–∫–∞–º"""
        self.weight_changed.emit(value)
    
    def _setup_calculations(self):
        """–ù–∞–ª–∞—à—Ç–æ–≤—É—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–æ–ª—ñ–≤"""
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤ –¥–æ –∑–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω—å –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø–æ–ª—ñ–≤
        self.height_spin.valueChanged.connect(self._update_calculations)
        self.weight_spin.valueChanged.connect(self._update_calculations)
        self.weight_spin.valueChanged.connect(self._on_weight_changed)
        self.heart_rate_spin.valueChanged.connect(self._update_calculations)
        
        # –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫
        self._update_calculations()
    
    def _update_calculations(self):
        """–û–Ω–æ–≤–ª—é—î –≤—Å—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤ —Ä–µ–∂–∏–º—ñ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —á–∞—Å—É"""
        try:
            print("üî• –ü–æ—á–∏–Ω–∞—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤...")
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ
            height_cm = self.height_spin.value() if self.height_spin.value() > 0 else None
            weight_kg = self.weight_spin.value() if self.weight_spin.value() > 0 else None
            hr_rest = self.heart_rate_spin.value() if self.heart_rate_spin.value() > 0 else None
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ —ñ–Ω—à–∏—Ö –≤–∫–ª–∞–¥–æ–∫
            age = self._get_age()
            gender = self._get_gender()
            activity_level = self._get_activity_level()
            
            print(f"üìä –î–∞–Ω—ñ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤: –∑—Ä—ñ—Å—Ç={height_cm}, –≤–∞–≥–∞={weight_kg}, –≤—ñ–∫={age}, —Å—Ç–∞—Ç—å={gender}, –ø—É–ª—å—Å={hr_rest}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ/–ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–æ–ª–µ —Ü–∏–∫–ª—É –º—ñ—Å—è—á–Ω–∏—Ö
            self._toggle_menstrual_field(gender)
            
            # ===== –ë–ï–ó–ü–ï–ß–ù–Ü –†–û–ó–†–ê–•–£–ù–ö–ò –ó –ù–ê–Ø–í–ù–ò–ú–ò –î–ê–ù–ò–ú–ò =====
            
            # 1. –ü—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏ (–ø–æ—Ç—Ä—ñ–±–µ–Ω —Ç—ñ–ª—å–∫–∏ –≤—ñ–∫)
            if age and age > 10:
                self._calculate_hr_zones_simple(age)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –ø—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏")
            else:
                self.hr_zones_display.setText("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—É–ª—å—Å–æ–≤–∏—Ö –∑–æ–Ω")
            
            # 2. –°—Ç–∞—Ç—É—Å –ß–°–° (–ø–æ—Ç—Ä—ñ–±–µ–Ω —Ç—ñ–ª—å–∫–∏ –ø—É–ª—å—Å)
            if hr_rest and hr_rest > 30:
                self._calculate_hr_status_simple(hr_rest)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ —Å—Ç–∞—Ç—É—Å –ß–°–°")
            else:
                self.hr_status_display.setText("–í–≤–µ–¥—ñ—Ç—å –ß–°–° —É —Å–ø–æ–∫–æ—ó")
            
            # 3. –Ü–ú–¢ (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥–∞)
            if height_cm and weight_kg and height_cm > 100 and weight_kg > 20:
                self._calculate_bmi_simple(height_cm, weight_kg)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ü–ú–¢")
            else:
                self.bmi_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥—É –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –Ü–ú–¢")
            
            # 4. BMR (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, –≤–∞–≥–∞, –≤—ñ–∫, —Å—Ç–∞—Ç—å)
            if height_cm and weight_kg and age and gender and height_cm > 100 and weight_kg > 20 and age > 10:
                self._calculate_bmr_simple(height_cm, weight_kg, age, gender)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ BMR")
            else:
                self.bmr_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É BMR")
            
            # 5. –ù–æ—Ä–º–∞ –≤–æ–¥–∏ (–ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤–∞–≥–∞)
            if weight_kg and weight_kg > 20:
                self._calculate_water_simple(weight_kg)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ω–æ—Ä–º—É –≤–æ–¥–∏")
            else:
                self.water_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤–∞–≥—É –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –Ω–æ—Ä–º–∏ –≤–æ–¥–∏")
                
            # 6. –Ü–Ω—à—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –ø–æ–∫–∏ –∑–∞–ª–∏—à–∞—î–º–æ —è–∫ –∑–∞–≥–ª—É—à–∫–∏
            self.body_fat_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤—Å—ñ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
            self.muscle_mass_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤—Å—ñ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ") 
            self.body_type_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤—Å—ñ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
            self.ideal_weight_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ —Å—Ç–∞—Ç—å")
            self.daily_calories_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤—Å—ñ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ")
            
            print("‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤: {e}")
            # –û—á–∏—â–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö
            self._clear_calculations_display()
            
            # 4. BMR —Ç–∞ –∫–∞–ª–æ—Ä—ñ—ó (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, –≤–∞–≥–∞, –≤—ñ–∫, —Å—Ç–∞—Ç—å)
            if height_cm and weight_kg and age and gender:
                self._calculate_bmr_simple(height_cm, weight_kg, age, gender, activity_level)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ BMR —Ç–∞ –∫–∞–ª–æ—Ä—ñ—ó")
            else:
                self.bmr_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
                self.daily_calories_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            
            # 5. –í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, –≤–∞–≥–∞, –≤—ñ–∫, —Å—Ç–∞—Ç—å)  
            if height_cm and weight_kg and age and gender:
                self._calculate_body_fat_simple(height_cm, weight_kg, age, gender)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –≤—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É")
            else:
                self.body_fat_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            
            # 6. –ú'—è–∑–æ–≤–∞ –º–∞—Å–∞ (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, –≤–∞–≥–∞, –≤—ñ–∫, —Å—Ç–∞—Ç—å)
            if height_cm and weight_kg and age and gender:
                self._calculate_muscle_mass_simple(height_cm, weight_kg, age, gender)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –º'—è–∑–æ–≤—É –º–∞—Å—É")
            else:
                self.muscle_mass_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            
            # 7. –¢–∏–ø —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏ (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, –≤–∞–≥–∞)
            if height_cm and weight_kg:
                self._calculate_body_type_simple(height_cm, weight_kg, gender)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ —Ç–∏–ø —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏")
            else:
                self.body_type_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥—É")
            
            # 8. –Ü–¥–µ–∞–ª—å–Ω–∞ –≤–∞–≥–∞ (–ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑—Ä—ñ—Å—Ç, —Å—Ç–∞—Ç—å)
            if height_cm and gender:
                self._calculate_ideal_weight_simple(height_cm, gender)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ —ñ–¥–µ–∞–ª—å–Ω—É –≤–∞–≥—É")
            else:
                self.ideal_weight_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ —Å—Ç–∞—Ç—å")
            
            # 9. –ù–æ—Ä–º–∞ –≤–æ–¥–∏ (–ø–æ—Ç—Ä—ñ–±–Ω–∞ –≤–∞–≥–∞)
            if weight_kg:
                self._calculate_water_intake_simple(weight_kg)
                print("‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ω–æ—Ä–º—É –≤–æ–¥–∏")
            else:
                self.water_display.setText("–í–≤–µ–¥—ñ—Ç—å –≤–∞–≥—É –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –Ω–æ—Ä–º–∏ –≤–æ–¥–∏")
            
            print("‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤: {e}")
            # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É, –∞–ª–µ –Ω–µ –≤–∏–≤–æ–¥–∏–º–æ –≤ –∫–æ–Ω—Å–æ–ª—å
            if hasattr(self, 'parent_dialog') and hasattr(self.parent_dialog, 'logger'):
                self.parent_dialog.logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤: {e}")
            # –û—á–∏—â–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö
            self._clear_calculations_display()
            self._clear_calculations_display()
    
    def _get_age(self):
        """–û—Ç—Ä–∏–º—É—î –≤—ñ–∫ –∑ –≤–∫–ª–∞–¥–∫–∏ –æ—Å–Ω–æ–≤–Ω–∏—Ö –¥–∞–Ω–∏—Ö"""
        try:
            if hasattr(self.parent_dialog, 'basic_tab'):
                birth_date = self.parent_dialog.basic_tab.birth_date_edit.date().toPython()
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ —Ä–µ–∞–ª—å–Ω–∞ –¥–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–Ω–µ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞)
                if birth_date.year <= 1950:
                    return None
                
                today = date.today()
                age = today.year - birth_date.year - ((today.month, today.day) < (birth_date.month, birth_date.day))
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—ñ–∫ —Ä–µ–∞–ª—å–Ω–∏–π
                if age < 5 or age > 120:
                    return None
                
                return age
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤—ñ–∫—É: {e}")
        return None
    
    def _get_gender(self):
        """–û—Ç—Ä–∏–º—É—î —Å—Ç–∞—Ç—å –∑ –≤–∫–ª–∞–¥–∫–∏ –æ—Å–Ω–æ–≤–Ω–∏—Ö –¥–∞–Ω–∏—Ö"""
        try:
            if hasattr(self.parent_dialog, 'basic_tab'):
                gender_text = self.parent_dialog.basic_tab.gender_combo.currentText()
                if "–ß–æ–ª–æ–≤—ñ–∫" in gender_text:
                    return "male"
                elif "–ñ—ñ–Ω–∫–∞" in gender_text:
                    return "female"
        except:
            pass
        return None
    
    def _get_activity_level(self):
        """–û—Ç—Ä–∏–º—É—î —Ä—ñ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∑ –≤–∫–ª–∞–¥–∫–∏ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è"""
        try:
            if hasattr(self.parent_dialog, 'lifestyle_tab'):
                activity_text = self.parent_dialog.lifestyle_tab.activity_level_combo.currentText()
                return activity_text
        except:
            pass
        return None
    
    def _toggle_menstrual_field(self, gender):
        """–ü–æ–∫–∞–∑—É—î/–ø—Ä–∏—Ö–æ–≤—É—î –ø–æ–ª–µ —Ü–∏–∫–ª—É –º—ñ—Å—è—á–Ω–∏—Ö"""
        try:
            if hasattr(self, 'menstrual_cycle_edit') and hasattr(self, 'menstrual_row'):
                if gender == "female":
                    self.menstrual_cycle_edit.setVisible(True)
                    if self.menstrual_row and len(self.menstrual_row) > 0:
                        self.menstrual_row[0].setVisible(True)  # –õ–µ–π–±–ª
                else:
                    self.menstrual_cycle_edit.setVisible(False)
                    if self.menstrual_row and len(self.menstrual_row) > 0:
                        self.menstrual_row[0].setVisible(False)  # –õ–µ–π–±–ª
        except Exception as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ –ø–æ–ª–µ–º —Ü–∏–∫–ª—É: {e}")
    
    # ===== –°–ü–†–û–©–ï–ù–Ü –ú–ï–¢–û–î–ò –†–û–ó–†–ê–•–£–ù–ö–Ü–í =====
    
    def _calculate_hr_zones_simple(self, age):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—É–ª—å—Å–æ–≤–∏—Ö –∑–æ–Ω"""
        max_hr = 220 - age
        
        zones_html = f"""
        <div style='background: #F8F9FA; padding: 12px; border-radius: 8px;'>
            <div style='font-size: 16px; font-weight: 600; color: #111827; margin-bottom: 8px;'>
                üéØ –ü—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏ (–º–∞–∫—Å. {max_hr} —É–¥/—Ö–≤):
            </div>
            <div style='margin: 4px 0; padding: 6px; background: #10B98120; border-left: 4px solid #10B981; border-radius: 4px;'>
                <span style='color: #10B981; font-weight: 600;'>üòå –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø</span>
                <span style='color: #6B7280; margin-left: 8px;'>{int(max_hr * 0.5)}-{int(max_hr * 0.6)} —É–¥/—Ö–≤ (50-60%)</span>
            </div>
            <div style='margin: 4px 0; padding: 6px; background: #F59E0B20; border-left: 4px solid #F59E0B; border-radius: 4px;'>
                <span style='color: #F59E0B; font-weight: 600;'>üî• –ñ–ò–†–û–°–ü–ê–õ–Æ–í–ê–ù–ù–Ø</span>
                <span style='color: #6B7280; margin-left: 8px;'>{int(max_hr * 0.6)}-{int(max_hr * 0.7)} —É–¥/—Ö–≤ (60-70%)</span>
            </div>
            <div style='margin: 4px 0; padding: 6px; background: #3B82F620; border-left: 4px solid #3B82F6; border-radius: 4px;'>
                <span style='color: #3B82F6; font-weight: 600;'>üèÉ –ê–ï–†–û–ë–ù–ê</span>
                <span style='color: #6B7280; margin-left: 8px;'>{int(max_hr * 0.7)}-{int(max_hr * 0.8)} —É–¥/—Ö–≤ (70-80%)</span>
            </div>
            <div style='margin: 4px 0; padding: 6px; background: #8B5CF620; border-left: 4px solid #8B5CF6; border-radius: 4px;'>
                <span style='color: #8B5CF6; font-weight: 600;'>‚ö° –ê–ù–ê–ï–†–û–ë–ù–ê</span>
                <span style='color: #6B7280; margin-left: 8px;'>{int(max_hr * 0.8)}-{int(max_hr * 0.9)} —É–¥/—Ö–≤ (80-90%)</span>
            </div>
            <div style='margin: 4px 0; padding: 6px; background: #EF444420; border-left: 4px solid #EF4444; border-radius: 4px;'>
                <span style='color: #EF4444; font-weight: 600;'>üî• –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê</span>
                <span style='color: #6B7280; margin-left: 8px;'>{int(max_hr * 0.9)}-{max_hr} —É–¥/—Ö–≤ (90-100%)</span>
            </div>
        </div>
        """
        
        self.hr_zones_display.setText(zones_html)
        self.hr_zones_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_hr_status_simple(self, hr_rest, age):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞—Ç—É—Å—É –ß–°–°"""
        if hr_rest < 50:
            status = "‚ùÑÔ∏è –ó–∞–Ω–∞–¥—Ç–æ –Ω–∏–∑—å–∫–∏–π"
            description = "–ú–æ–∂–µ –≤–∏–º–∞–≥–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –ª—ñ–∫–∞—Ä—è"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        elif hr_rest < 60:
            status = "üìâ –ù–∏–∑—å–∫–∏–π"
            description = "–ß–∞—Å—Ç–æ —É –¥–æ–±—Ä–µ —Ç—Ä–µ–Ω–æ–≤–∞–Ω–∏—Ö –ª—é–¥–µ–π"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        elif hr_rest < 70:
            status = "‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–∏–π"
            description = "–ù–∞–π–∫—Ä–∞—â—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤'—è"
            color = "#10B981"
            bg_color = "#D1FAE5"
        elif hr_rest < 80:
            status = "üëç –ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
            description = "–¢–∏–ø–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏"
            color = "#3B82F6"
            bg_color = "#DBEAFE"
        elif hr_rest < 90:
            status = "üìà –ü—ñ–¥–≤–∏—â–µ–Ω–∏–π"
            description = "–ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        else:
            status = "üî• –í–∏—Å–æ–∫–∏–π"
            description = "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –ª—ñ–∫–∞—Ä—è"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ß–°–°: {hr_rest} —É–¥/—Ö–≤</div>
            <div style='font-size: 14px; margin-top: 4px;'>{status}</div>
            <div style='font-size: 12px; color: #6B7280; margin-top: 4px;'>{description}</div>
        </div>
        """
        
        self.hr_status_display.setText(result_text)
        self.hr_status_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_bmi_simple(self, height_cm, weight_kg):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ü–ú–¢"""
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        if bmi < 18.5:
            category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –≤–∞–≥–∞"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        elif 18.5 <= bmi < 25:
            category = "–ù–æ—Ä–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞"
            color = "#10B981"
            bg_color = "#D1FAE5"
        elif 25 <= bmi < 30:
            category = "–ù–∞–¥–º—ñ—Ä–Ω–∞ –≤–∞–≥–∞"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        else:
            category = "–û–∂–∏—Ä—ñ–Ω–Ω—è"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–ú–¢: {bmi:.1f}</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.bmi_display.setText(result_text)
        self.bmi_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_bmr_simple(self, height_cm, weight_kg, age, gender, activity_level=None):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ BMR —Ç–∞ –∫–∞–ª–æ—Ä—ñ–π"""
        # –§–æ—Ä–º—É–ª–∞ –ú—ñ—Ñ—Ñ–ª—ñ–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞
        if gender == "male":
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age + 5
        else:  # female
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age - 161
        
        # –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        multiplier = 1.55  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–º—ñ—Ä–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        if activity_level and "–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞" in str(activity_level):
            multiplier = 1.2
        elif activity_level and "–õ–µ–≥–∫–∞" in str(activity_level):
            multiplier = 1.375
        elif activity_level and "–í–∏—Å–æ–∫–∞" in str(activity_level):
            multiplier = 1.725
        elif activity_level and "–î—É–∂–µ –≤–∏—Å–æ–∫–∞" in str(activity_level):
            multiplier = 1.9
        
        maintenance = int(bmr * multiplier)
        cutting = int(maintenance * 0.8)
        bulking = int(maintenance * 1.2)
        
        # BMR
        bmr_text = f"""
        <div style='background: #FEF3C7; padding: 8px; border-radius: 6px; color: #D97706; font-weight: 600;'>
            <div style='font-size: 16px;'>BMR: {int(bmr)} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
            <div style='font-size: 12px; margin-top: 4px; font-weight: normal;'>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –µ–Ω–µ—Ä–≥—ñ—è –¥–ª—è –∂–∏—Ç—Ç—î–¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ</div>
        </div>
        """
        self.bmr_display.setText(bmr_text)
        self.bmr_display.setStyleSheet("QLabel { background: transparent; border: none; }")
        
        # –ö–∞–ª–æ—Ä—ñ—ó
        calories_text = f"""
        <div style='background: #ECFDF5; padding: 12px; border-radius: 8px; color: #059669; font-weight: 600;'>
            <div style='font-size: 16px; margin-bottom: 8px;'>–î–µ–Ω–Ω—ñ –∫–∞–ª–æ—Ä—ñ—ó:</div>
            <div style='font-size: 14px; margin: 4px 0;'>üéØ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: {maintenance} –∫–∫–∞–ª</div>
            <div style='font-size: 14px; margin: 4px 0;'>üìâ –°—Ö—É–¥–Ω–µ–Ω–Ω—è: {cutting} –∫–∫–∞–ª</div>
            <div style='font-size: 14px; margin: 4px 0;'>üìà –ù–∞–±—ñ—Ä –º–∞—Å–∏: {bulking} –∫–∫–∞–ª</div>
        </div>
        """
        self.daily_calories_display.setText(calories_text)
        self.daily_calories_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_body_fat_simple(self, height_cm, weight_kg, age, gender):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å–æ—Ç–∫–∞ –∂–∏—Ä—É"""
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        # –§–æ—Ä–º—É–ª–∞ Deurenberg
        if gender == "male":
            body_fat = 1.20 * bmi + 0.23 * age - 16.2
        else:  # female
            body_fat = 1.20 * bmi + 0.23 * age - 5.4
        
        result_text = f"""
        <div style='background: #DBEAFE; padding: 8px; border-radius: 6px; color: #3B82F6; font-weight: 600;'>
            <div style='font-size: 16px;'>–ñ–∏—Ä —É —Ç—ñ–ª—ñ: {body_fat:.1f}%</div>
            <div style='font-size: 12px; margin-top: 4px; color: #6B7280; font-weight: normal;'>–ó–∞ —Ñ–æ—Ä–º—É–ª–æ—é Deurenberg</div>
        </div>
        """
        
        self.body_fat_display.setText(result_text)
        self.body_fat_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_muscle_mass_simple(self, height_cm, weight_kg, age, gender):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏"""
        # –§–æ—Ä–º—É–ª–∞ Janssen
        if gender == "male":
            muscle_mass = (0.407 * weight_kg) + (0.267 * height_cm) - (0.049 * age) + 5.09
        else:  # female
            muscle_mass = (0.252 * weight_kg) + (0.473 * height_cm) - (0.048 * age) + 2.83
        
        muscle_percentage = (muscle_mass / weight_kg) * 100
        
        result_text = f"""
        <div style='background: #D1FAE5; padding: 8px; border-radius: 6px; color: #10B981; font-weight: 600;'>
            <div style='font-size: 16px;'>–ú'—è–∑–æ–≤–∞ –º–∞—Å–∞: {muscle_mass:.1f} –∫–≥</div>
            <div style='font-size: 14px; margin-top: 4px;'>{muscle_percentage:.1f}% –≤—ñ–¥ –≤–∞–≥–∏</div>
        </div>
        """
        
        self.muscle_mass_display.setText(result_text)
        self.muscle_mass_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_body_type_simple(self, height_cm, weight_kg, gender):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç–∏–ø—É —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏"""
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        if bmi < 20:
            body_type = "–ï–∫—Ç–æ–º–æ—Ä—Ñ"
            description = "–¢–æ–Ω–∫–µ, —Ö—É–¥–µ —Ç—ñ–ª–æ –∑ —à–≤–∏–¥–∫–∏–º –º–µ—Ç–∞–±–æ–ª—ñ–∑–º–æ–º"
            color = "#3B82F6"
            bg_color = "#DBEAFE"
        elif bmi < 25:
            body_type = "–ú–µ–∑–æ–º–æ—Ä—Ñ"
            description = "–ê—Ç–ª–µ—Ç–∏—á–Ω–µ, –º—É—Å–∫—É–ª–∏—Å—Ç–µ —Ç—ñ–ª–æ"
            color = "#10B981"
            bg_color = "#D1FAE5"
        else:
            body_type = "–ï–Ω–¥–æ–º–æ—Ä—Ñ"
            description = "–®–∏—Ä–æ–∫–∞ –∫—ñ—Å—Ç–∫–æ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 12px; border-radius: 8px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px; margin-bottom: 8px;'>–¢–∏–ø: {body_type}</div>
            <div style='font-size: 12px; color: #6B7280; line-height: 1.4;'>{description}</div>
        </div>
        """
        
        self.body_type_display.setText(result_text)
        self.body_type_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_ideal_weight_simple(self, height_cm, gender):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —ñ–¥–µ–∞–ª—å–Ω–æ—ó –≤–∞–≥–∏"""
        if gender == "male":
            ideal_weight = (height_cm - 100) * 0.9
        else:  # female
            ideal_weight = (height_cm - 100) * 0.85
        
        result_text = f"""
        <div style='background: #F3E8FF; padding: 8px; border-radius: 6px; color: #8B5CF6; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–¥–µ–∞–ª—å–Ω–∞ –≤–∞–≥–∞: {ideal_weight:.1f} –∫–≥</div>
            <div style='font-size: 12px; margin-top: 4px; color: #6B7280; font-weight: normal;'>–ó–∞ —Å–ø—Ä–æ—â–µ–Ω–æ—é —Ñ–æ—Ä–º—É–ª–æ—é</div>
        </div>
        """
        
        self.ideal_weight_display.setText(result_text)
        self.ideal_weight_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_water_intake_simple(self, weight_kg):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–æ—Ä–º–∏ –≤–æ–¥–∏"""
        water_intake = weight_kg * 0.035  # 35 –º–ª –Ω–∞ –∫–≥ –≤–∞–≥–∏
        
        result_text = f"""
        <div style='background: #E0F2FE; padding: 8px; border-radius: 6px; color: #0891B2; font-weight: 600;'>
            <div style='font-size: 16px;'>–ù–æ—Ä–º–∞ –≤–æ–¥–∏: {water_intake:.1f} –ª/–¥–µ–Ω—å</div>
            <div style='font-size: 12px; margin-top: 4px; color: #6B7280; font-weight: normal;'>35 –º–ª –Ω–∞ –∫–≥ –≤–∞–≥–∏</div>
        </div>
        """
        
        self.water_display.setText(result_text)
        self.water_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    # ===== –ö–Ü–ù–ï–¶–¨ –°–ü–†–û–©–ï–ù–ò–• –ú–ï–¢–û–î–Ü–í =====
    
    def _calculate_bmi(self, height_cm, weight_kg):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ü–ú–¢"""
        if height_cm <= 0 or weight_kg <= 0:
            self.bmi_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥—É")
            return
        
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –∫–æ–ª—å–æ—Ä—É
        if bmi < 18.5:
            category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –≤–∞–≥–∞"
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        elif 18.5 <= bmi < 25:
            category = "–ù–æ—Ä–º–∞"
            color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
            bg_color = "#D1FAE5"
        elif 25 <= bmi < 30:
            category = "–ù–∞–¥–ª–∏—à–∫–æ–≤–∞ –≤–∞–≥–∞"
            color = "#F59E0B"  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            bg_color = "#FEF3C7"
        else:
            category = "–û–∂–∏—Ä—ñ–Ω–Ω—è"
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–ú–¢: {bmi:.1f}</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.bmi_display.setText(result_text)
        self.bmi_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_body_fat(self, height_cm, weight_kg, age, gender):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å–æ—Ç–∫–∞ –∂–∏—Ä—É –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é Deurenberg"""
        if not all([height_cm, weight_kg, age, gender]):
            self.body_fat_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        # –§–æ—Ä–º—É–ª–∞ Deurenberg
        if gender == "male":
            body_fat = 1.20 * bmi + 0.23 * age - 16.2
        else:  # female
            body_fat = 1.20 * bmi + 0.23 * age - 5.4
        
        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        if gender == "male":
            if body_fat < 6:
                category = "–î—É–∂–µ –Ω–∏–∑—å–∫–∏–π"
                color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
                bg_color = "#DBEAFE"
            elif body_fat < 14:
                category = "–ù–∏–∑—å–∫–∏–π"
                color = "#06B6D4"  # –ë—ñ—Ä—é–∑–æ–≤–∏–π
                bg_color = "#CFFAFE"
            elif body_fat < 25:
                category = "–ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
                color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
                bg_color = "#D1FAE5"
            else:
                category = "–í–∏—Å–æ–∫–∏–π"
                color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
                bg_color = "#FEE2E2"
        else:  # female
            if body_fat < 16:
                category = "–î—É–∂–µ –Ω–∏–∑—å–∫–∏–π"
                color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
                bg_color = "#DBEAFE"
            elif body_fat < 20:
                category = "–ù–∏–∑—å–∫–∏–π"
                color = "#06B6D4"  # –ë—ñ—Ä—é–∑–æ–≤–∏–π
                bg_color = "#CFFAFE"
            elif body_fat < 30:
                category = "–ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
                color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
                bg_color = "#D1FAE5"
            else:
                category = "–í–∏—Å–æ–∫–∏–π"
                color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
                bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ñ–∏—Ä: {body_fat:.1f}%</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.body_fat_display.setText(result_text)
        self.body_fat_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_muscle_mass(self, height_cm, weight_kg, age, gender):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏ –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é Janssen"""
        if not all([height_cm, weight_kg, age, gender]):
            self.muscle_mass_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        height_m = height_cm / 100
        
        # –§–æ—Ä–º—É–ª–∞ Janssen –¥–ª—è —Å–∫–µ–ª–µ—Ç–Ω–æ—ó –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏
        if gender == "male":
            muscle_mass = (0.407 * weight_kg) + (0.267 * height_cm) - (0.049 * age) + 5.09
        else:  # female
            muscle_mass = (0.252 * weight_kg) + (0.473 * height_cm) - (0.048 * age) + 2.83
        
        muscle_percentage = (muscle_mass / weight_kg) * 100
        
        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        if gender == "male":
            if muscle_percentage < 37:
                category = "–ù–∏–∑—å–∫–∏–π"
                color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
                bg_color = "#FEE2E2"
            elif muscle_percentage < 45:
                category = "–ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
                color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
                bg_color = "#D1FAE5"
            else:
                category = "–í–∏—Å–æ–∫–∏–π"
                color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
                bg_color = "#DBEAFE"
        else:  # female
            if muscle_percentage < 31:
                category = "–ù–∏–∑—å–∫–∏–π"
                color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
                bg_color = "#FEE2E2"
            elif muscle_percentage < 36:
                category = "–ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
                color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
                bg_color = "#D1FAE5"
            else:
                category = "–í–∏—Å–æ–∫–∏–π"
                color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
                bg_color = "#DBEAFE"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ú'—è–∑–∏: {muscle_mass:.1f} –∫–≥ ({muscle_percentage:.1f}%)</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.muscle_mass_display.setText(result_text)
        self.muscle_mass_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_body_type(self, height_cm, weight_kg, age, gender):
        """–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏ (—Å–æ–º–∞—Ç–æ—Ç–∏–ø—É)"""
        if not all([height_cm, weight_kg, gender]):
            self.body_type_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        # –°–ø—Ä–æ—â–µ–Ω–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å–æ–º–∞—Ç–æ—Ç–∏–ø—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ü–ú–¢
        if bmi < 20:
            body_type = "–ï–∫—Ç–æ–º–æ—Ä—Ñ"
            description = "–¢–æ–Ω–∫–µ, —Ö—É–¥–µ —Ç—ñ–ª–æ –∑ –≤—É–∑—å–∫–∏–º–∏ –∫—ñ—Å—Ç–∫–∞–º–∏ —Ç–∞ –Ω–∏–∑—å–∫–∏–º —Ä—ñ–≤–Ω–µ–º –∂–∏—Ä—É. –ú–µ—Ç–∞–±–æ–ª—ñ–∑–º —à–≤–∏–¥–∫–∏–π, –≤–∞–∂–∫–æ –Ω–∞–±–∏—Ä–∞—Ç–∏ –≤–∞–≥—É."
            color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
            bg_color = "#DBEAFE"
        elif bmi < 25:
            body_type = "–ú–µ–∑–æ–º–æ—Ä—Ñ"
            description = "–ê—Ç–ª–µ—Ç–∏—á–Ω–µ, –º—É—Å–∫—É–ª–∏—Å—Ç–µ —Ç—ñ–ª–æ –∑ —à–∏—Ä–æ–∫–∏–º–∏ –ø–ª–µ—á–∏–º–∞. –ú–µ—Ç–∞–±–æ–ª—ñ–∑–º —Å–µ—Ä–µ–¥–Ω—ñ–π, –ª–µ–≥–∫–æ –Ω–∞—Ä–æ—â—É—é—Ç—å –º'—è–∑–∏."
            color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
            bg_color = "#D1FAE5"
        else:
            body_type = "–ï–Ω–¥–æ–º–æ—Ä—Ñ"
            description = "–®–∏—Ä–æ–∫–∞ –∫—ñ—Å—Ç–∫–æ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Å—Ö–∏–ª—å–Ω—ñ—Å—Ç—å –¥–æ –Ω–∞–±–æ—Ä—É –∂–∏—Ä—É. –ú–µ—Ç–∞–±–æ–ª—ñ–∑–º –ø–æ–≤—ñ–ª—å–Ω–∏–π, –ª–µ–≥–∫–æ –Ω–∞–±–∏—Ä–∞—é—Ç—å –≤–∞–≥—É."
            color = "#F59E0B"  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            bg_color = "#FEF3C7"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>{body_type}</div>
            <div style='font-size: 12px; margin-top: 4px; color: #374151; font-weight: normal;'>{description}</div>
        </div>
        """
        
        self.body_type_display.setText(result_text)
        self.body_type_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_bmr(self, height_cm, weight_kg, age, gender):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –±–∞–∑–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–∞–±–æ–ª—ñ–∑–º—É –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é –ú—ñ—Ñ—Ñ–ª—ñ–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞"""
        if not all([height_cm, weight_kg, age, gender]):
            self.bmr_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        # –§–æ—Ä–º—É–ª–∞ –ú—ñ—Ñ—Ñ–ª—ñ–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞
        if gender == "male":
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age + 5
        else:  # female
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age - 161
        
        result_text = f"""
        <div style='background: #F3F4F6; padding: 8px; border-radius: 6px; color: #374151; font-weight: 600;'>
            <div style='font-size: 16px;'>BMR: {bmr:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
            <div style='font-size: 12px; margin-top: 4px; font-weight: normal;'>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –µ–Ω–µ—Ä–≥—ñ—è –¥–ª—è –∂–∏—Ç—Ç—î–¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ</div>
        </div>
        """
        
        self.bmr_display.setText(result_text)
        self.bmr_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_daily_calories(self, height_cm, weight_kg, age, gender, activity_level):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–µ–Ω–Ω–æ—ó –ø–æ—Ç—Ä–µ–±–∏ –≤ –∫–∞–ª–æ—Ä—ñ—è—Ö"""
        if not all([height_cm, weight_kg, age, gender]):
            self.calories_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ BMR
        if gender == "male":
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age + 5
        else:  # female
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age - 161
        
        # –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        activity_multipliers = {
            "–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å": 1.2,
            "–õ–µ–≥–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å": 1.375,
            "–ü–æ–º—ñ—Ä–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å": 1.55,
            "–í–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å": 1.725,
            "–î—É–∂–µ –≤–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å": 1.9
        }
        
        multiplier = 1.55  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–º—ñ—Ä–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        if activity_level and activity_level in activity_multipliers:
            multiplier = activity_multipliers[activity_level]
        
        maintenance_calories = bmr * multiplier
        cutting_calories = maintenance_calories * 0.8  # -20% –¥–ª—è —Å—Ö—É–¥–Ω–µ–Ω–Ω—è
        bulking_calories = maintenance_calories * 1.2   # +20% –¥–ª—è –Ω–∞–±–æ—Ä—É –º–∞—Å–∏
        
        result_text = f"""
        <div style='background: #F3F4F6; padding: 8px; border-radius: 6px; color: #374151; font-weight: 600;'>
            <div style='font-size: 14px;'>üéØ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: {maintenance_calories:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
            <div style='font-size: 14px; margin-top: 2px;'>üìâ –°—Ö—É–¥–Ω–µ–Ω–Ω—è: {cutting_calories:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
            <div style='font-size: 14px; margin-top: 2px;'>üìà –ù–∞–±—ñ—Ä –º–∞—Å–∏: {bulking_calories:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
        </div>
        """
        
        self.calories_display.setText(result_text)
        self.calories_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_hr_status(self, hr_rest, age):
        """–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –ß–°–° —É —Å–ø–æ–∫–æ—ó"""
        if not hr_rest:
            self.hr_status_display.setText("–í–≤–µ–¥—ñ—Ç—å –ß–°–° —É —Å–ø–æ–∫–æ—ó")
            return
        
        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –ß–°–°
        if hr_rest < 50:
            status = "‚ùÑÔ∏è –ó–∞–Ω–∞–¥—Ç–æ –Ω–∏–∑—å–∫–∏–π"
            description = "–ú–æ–∂–µ –≤–∏–º–∞–≥–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –ª—ñ–∫–∞—Ä—è"
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        elif hr_rest < 60:
            status = "üìâ –ù–∏–∑—å–∫–∏–π"
            description = "–ß–∞—Å—Ç–æ —É –¥–æ–±—Ä–µ —Ç—Ä–µ–Ω–æ–≤–∞–Ω–∏—Ö –ª—é–¥–µ–π"
            color = "#F59E0B"  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            bg_color = "#FEF3C7"
        elif hr_rest < 70:
            status = "‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–∏–π"
            description = "–ù–∞–π–∫—Ä–∞—â—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤'—è"
            color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
            bg_color = "#D1FAE5"
        elif hr_rest < 80:
            status = "üëç –ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
            description = "–¢–∏–ø–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏"
            color = "#3B82F6"  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
            bg_color = "#DBEAFE"
        elif hr_rest < 90:
            status = "üìà –ü—ñ–¥–≤–∏—â–µ–Ω–∏–π"
            description = "–ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ"
            color = "#F59E0B"  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            bg_color = "#FEF3C7"
        else:
            status = "üî• –í–∏—Å–æ–∫–∏–π"
            description = "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –ª—ñ–∫–∞—Ä—è"
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>{status}</div>
            <div style='font-size: 12px; margin-top: 4px; color: #374151; font-weight: normal;'>{description}</div>
        </div>
        """
        
        self.hr_status_display.setText(result_text)
        self.hr_status_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_hr_zones(self, age):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—É–ª—å—Å–æ–≤–∏—Ö –∑–æ–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω—å"""
        if not age:
            self.hr_zones_display.setText("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤—ñ–∫—É")
            return
        
        max_hr = 220 - age
        
        # –ó–æ–Ω–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å (–≤—ñ–¥—Å–æ—Ç–∫–∏ –≤—ñ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—É–ª—å—Å—É)
        recovery_min = int(max_hr * 0.5)
        recovery_max = int(max_hr * 0.6)
        
        fat_burn_min = int(max_hr * 0.6)
        fat_burn_max = int(max_hr * 0.7)
        
        aerobic_min = int(max_hr * 0.7)
        aerobic_max = int(max_hr * 0.8)
        
        anaerobic_min = int(max_hr * 0.8)
        anaerobic_max = int(max_hr * 0.9)
        
        max_min = int(max_hr * 0.9)
        max_max = max_hr
        
        result_text = f"""
        <div style='background: #F3F4F6; padding: 8px; border-radius: 6px; color: #374151; font-weight: 600;'>
            <div style='font-size: 14px; margin-bottom: 6px;'>üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –ø—É–ª—å—Å: {max_hr} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #10B981;'>üòå –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø: {recovery_min}-{recovery_max} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #F59E0B;'>üî• –ñ–ò–†–û–°–ü–ê–õ–Æ–í–ê–ù–ù–Ø: {fat_burn_min}-{fat_burn_max} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #3B82F6;'>üèÉ –ê–ï–†–û–ë–ù–ê: {aerobic_min}-{aerobic_max} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #8B5CF6;'>‚ö° –ê–ù–ê–ï–†–û–ë–ù–ê: {anaerobic_min}-{anaerobic_max} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #EF4444;'>üî• –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê: {max_min}-{max_max} —É–¥/—Ö–≤</div>
        </div>
        """
        
        self.hr_zones_display.setText(result_text)
        self.hr_zones_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    # ===== –ù–û–í–Ü –ú–ï–¢–û–î–ò –û–ù–û–í–õ–ï–ù–ù–Ø –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø =====
    
    def _update_bmi_display(self, bmi, category):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ü–ú–¢"""
        if not bmi:
            self.bmi_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ –≤–∞–≥—É")
            return
        
        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
        if "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è" in category:
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        elif "–ù–æ—Ä–º–∞–ª—å–Ω–∞" in category:
            color = "#10B981"  # –ó–µ–ª–µ–Ω–∏–π
            bg_color = "#D1FAE5"
        elif "–ù–∞–¥–º—ñ—Ä–Ω–∞" in category:
            color = "#F59E0B"  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            bg_color = "#FEF3C7"
        else:  # –û–∂–∏—Ä—ñ–Ω–Ω—è
            color = "#EF4444"  # –ß–µ—Ä–≤–æ–Ω–∏–π
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–ú–¢: {bmi}</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.bmi_display.setText(result_text)
        self.bmi_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_body_fat_display(self, body_fat):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –∂–∏—Ä—É"""
        if not body_fat:
            self.body_fat_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        result_text = f"""
        <div style='background: #DBEAFE; padding: 8px; border-radius: 6px; color: #3B82F6; font-weight: 600;'>
            <div style='font-size: 16px;'>–ñ–∏—Ä —É —Ç—ñ–ª—ñ: {body_fat}%</div>
        </div>
        """
        
        self.body_fat_display.setText(result_text)
        self.body_fat_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_ideal_weight_display(self, ideal_weight):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–¥–µ–∞–ª—å–Ω–æ—ó –≤–∞–≥–∏"""
        if not ideal_weight:
            self.ideal_weight_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        result_text = f"""
        <div style='background: #F3E8FF; padding: 8px; border-radius: 6px; color: #8B5CF6; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–¥–µ–∞–ª—å–Ω–∞ –≤–∞–≥–∞: {ideal_weight} –∫–≥</div>
        </div>
        """
        
        if hasattr(self, 'ideal_weight_display'):
            self.ideal_weight_display.setText(result_text)
            self.ideal_weight_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_bmr_display(self, bmr):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–∑–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–∞–±–æ–ª—ñ–∑–º—É"""
        if not bmr:
            self.bmr_display.setText("–í–≤–µ–¥—ñ—Ç—å –∑—Ä—ñ—Å—Ç, –≤–∞–≥—É, –≤—ñ–∫ —Ç–∞ —Å—Ç–∞—Ç—å")
            return
        
        result_text = f"""
        <div style='background: #FEF3C7; padding: 8px; border-radius: 6px; color: #D97706; font-weight: 600;'>
            <div style='font-size: 16px;'>BMR: {int(bmr)} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
        </div>
        """
        
        if hasattr(self, 'bmr_display'):
            self.bmr_display.setText(result_text)
            self.bmr_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_daily_calories_display(self, daily_calories_detailed):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ–Ω–Ω–∏—Ö –∫–∞–ª–æ—Ä—ñ–π –∑ –¥–µ—Ç–∞–ª—è–º–∏"""
        if not daily_calories_detailed:
            return
        
        maintenance = daily_calories_detailed.get('maintenance', 0)
        weight_loss = daily_calories_detailed.get('weight_loss', 0)
        weight_gain = daily_calories_detailed.get('weight_gain', 0)
        
        result_text = f"""
        <div style='background: #ECFDF5; padding: 12px; border-radius: 8px; color: #059669; font-weight: 600;'>
            <div style='font-size: 16px; margin-bottom: 8px;'>–î–µ–Ω–Ω—ñ –∫–∞–ª–æ—Ä—ñ—ó:</div>
            <div style='font-size: 14px; margin: 4px 0;'>üéØ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: {maintenance} –∫–∫–∞–ª</div>
            <div style='font-size: 14px; margin: 4px 0;'>üìâ –°—Ö—É–¥–Ω–µ–Ω–Ω—è: {weight_loss} –∫–∫–∞–ª</div>
            <div style='font-size: 14px; margin: 4px 0;'>üìà –ù–∞–±—ñ—Ä –º–∞—Å–∏: {weight_gain} –∫–∫–∞–ª</div>
        </div>
        """
        
        if hasattr(self, 'daily_calories_display'):
            self.daily_calories_display.setText(result_text)
            self.daily_calories_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_muscle_mass_display(self, muscle_mass_data):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏"""
        if not muscle_mass_data:
            return
        
        mass_kg = muscle_mass_data.get('mass_kg', 0)
        percentage = muscle_mass_data.get('percentage', 0)
        category = muscle_mass_data.get('category', '')
        color = muscle_mass_data.get('color', '#6B7280')
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É
        bg_colors = {
            '#EF4444': '#FEE2E2',  # –ß–µ—Ä–≤–æ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-—á–µ—Ä–≤–æ–Ω–∏–π
            '#10B981': '#D1FAE5',  # –ó–µ–ª–µ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-–∑–µ–ª–µ–Ω–∏–π
            '#3B82F6': '#DBEAFE'   # –ë–ª–∞–∫–∏—Ç–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-–±–ª–∞–∫–∏—Ç–Ω–∏–π
        }
        bg_color = bg_colors.get(color, '#F3F4F6')
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ú'—è–∑–æ–≤–∞ –º–∞—Å–∞: {mass_kg} –∫–≥</div>
            <div style='font-size: 14px; margin-top: 4px;'>{percentage}% - {category}</div>
        </div>
        """
        
        if hasattr(self, 'muscle_mass_display'):
            self.muscle_mass_display.setText(result_text)
            self.muscle_mass_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_body_type_display(self, body_type_data):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—É —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏"""
        if not body_type_data:
            return
        
        body_type = body_type_data.get('type', '')
        description = body_type_data.get('description', '')
        color = body_type_data.get('color', '#6B7280')
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É
        bg_colors = {
            '#EF4444': '#FEE2E2',  # –ß–µ—Ä–≤–æ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-—á–µ—Ä–≤–æ–Ω–∏–π
            '#10B981': '#D1FAE5',  # –ó–µ–ª–µ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-–∑–µ–ª–µ–Ω–∏–π
            '#3B82F6': '#DBEAFE'   # –ë–ª–∞–∫–∏—Ç–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-–±–ª–∞–∫–∏—Ç–Ω–∏–π
        }
        bg_color = bg_colors.get(color, '#F3F4F6')
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 12px; border-radius: 8px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px; margin-bottom: 8px;'>–¢–∏–ø —Ç—ñ–ª–æ–±—É–¥–æ–≤–∏: {body_type}</div>
            <div style='font-size: 12px; color: #6B7280; line-height: 1.4;'>{description}</div>
        </div>
        """
        
        if hasattr(self, 'body_type_display'):
            self.body_type_display.setText(result_text)
            self.body_type_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_hr_status_display(self, hr_status_data):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –ß–°–°"""
        if not hr_status_data:
            return
        
        status = hr_status_data.get('status', '')
        color = hr_status_data.get('color', '#6B7280')
        description = hr_status_data.get('description', '')
        value = hr_status_data.get('value', 0)
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É
        bg_colors = {
            '#EF4444': '#FEE2E2',  # –ß–µ—Ä–≤–æ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-—á–µ—Ä–≤–æ–Ω–∏–π
            '#10B981': '#D1FAE5',  # –ó–µ–ª–µ–Ω–∏–π -> –°–≤—ñ—Ç–ª–æ-–∑–µ–ª–µ–Ω–∏–π
            '#F59E0B': '#FEF3C7'   # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π -> –°–≤—ñ—Ç–ª–æ-–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
        }
        bg_color = bg_colors.get(color, '#F3F4F6')
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ß–°–°: {value} —É–¥/—Ö–≤</div>
            <div style='font-size: 14px; margin-top: 4px;'>{status}</div>
            <div style='font-size: 12px; color: #6B7280; margin-top: 4px;'>{description}</div>
        </div>
        """
        
        if hasattr(self, 'hr_status_display'):
            self.hr_status_display.setText(result_text)
            self.hr_status_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_hr_zones_display(self, hr_zones_data):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—É–ª—å—Å–æ–≤–∏—Ö –∑–æ–Ω"""
        if not hr_zones_data:
            return
        
        max_hr = hr_zones_data.get('max_hr', 0)
        zones = ['recovery', 'fat_burn', 'aerobic', 'anaerobic', 'maximum']
        
        zones_html = []
        for zone_key in zones:
            zone = hr_zones_data.get(zone_key, {})
            name = zone.get('name', '')
            range_str = zone.get('range', '')
            percentage = zone.get('percentage', '')
            color = zone.get('color', '#6B7280')
            
            zones_html.append(f"""
                <div style='margin: 4px 0; padding: 6px; background: {color}20; border-left: 4px solid {color}; border-radius: 4px;'>
                    <span style='color: {color}; font-weight: 600;'>{name}</span>
                    <span style='color: #6B7280; margin-left: 8px;'>{range_str} —É–¥/—Ö–≤ ({percentage})</span>
                </div>
            """)
        
        result_text = f"""
        <div style='background: #F8F9FA; padding: 12px; border-radius: 8px;'>
            <div style='font-size: 16px; font-weight: 600; color: #111827; margin-bottom: 8px;'>
                –ü—É–ª—å—Å–æ–≤—ñ –∑–æ–Ω–∏ (–º–∞–∫—Å. {max_hr} —É–¥/—Ö–≤):
            </div>
            {''.join(zones_html)}
        </div>
        """
        
        if hasattr(self, 'hr_zones_display'):
            self.hr_zones_display.setText(result_text)
            self.hr_zones_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _update_water_intake_display(self, water_intake):
        """–û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–æ—Ä–º–∏ –≤–æ–¥–∏"""
        if not water_intake:
            return
        
        result_text = f"""
        <div style='background: #E0F2FE; padding: 8px; border-radius: 6px; color: #0891B2; font-weight: 600;'>
            <div style='font-size: 16px;'>–ù–æ—Ä–º–∞ –≤–æ–¥–∏: {water_intake} –ª/–¥–µ–Ω—å</div>
        </div>
        """
        
        if hasattr(self, 'water_display'):
            self.water_display.setText(result_text)
            self.water_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _clear_calculations_display(self):
        """–û—á–∏—â–∞—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö"""
        display_widgets = [
            'bmi_display', 'body_fat_display', 'ideal_weight_display',
            'bmr_display', 'daily_calories_display', 'water_display'
        ]
        
        for widget_name in display_widgets:
            if hasattr(self, widget_name):
                widget = getattr(self, widget_name)
                widget.setText("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É")
    
    # ===== –î–û–ü–û–ú–Ü–ñ–ù–Ü –ú–ï–¢–û–î–ò =====
    
    def _get_group_style(self):
        """–°—Ç–∏–ª—å –¥–ª—è –≥—Ä—É–ø–æ–≤–∏—Ö –±–ª–æ–∫—ñ–≤"""
        return """
            QGroupBox {
                font-size: 16px;
                font-weight: 600;
                color: #111827;
                border: 2px solid #E5E7EB;
                border-radius: 12px;
                margin-top: 12px;
                padding-top: 8px;
                background: white;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 15px;
                padding: 0 8px 0 8px;
                background-color: white;
            }
        """
    
    def _load_data(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞"""
        if not self.client_data:
            return
        
        self.height_spin.setValue(self.client_data.get('height', 170))
        self.weight_spin.setValue(self.client_data.get('weight', 70.0))
        self.bp_systolic_spin.setValue(self.client_data.get('bp_systolic', 120))
        self.bp_diastolic_spin.setValue(self.client_data.get('bp_diastolic', 80))
        self.heart_rate_spin.setValue(self.client_data.get('heart_rate', 70))
        self.water_intake_spin.setValue(self.client_data.get('water_intake', 2.0))
        self.menstrual_cycle_edit.setText(self.client_data.get('menstrual_cycle', ''))
        
        # –î–∞—Ç–∞ –º–µ–¥–æ–≥–ª—è–¥—É
        if 'medical_exam_date' in self.client_data:
            try:
                exam_date = datetime.fromisoformat(self.client_data['medical_exam_date']).date()
                self.medical_exam_date_edit.setDate(QDate(exam_date))
            except:
                pass
        
        # –ú–µ–¥–∏—á–Ω–∏–π –¥–æ–∑–≤—ñ–ª
        if 'medical_clearance' in self.client_data:
            clearance = self.client_data['medical_clearance']
            for i in range(self.medical_clearance_combo.count()):
                if self.medical_clearance_combo.itemText(i) == clearance:
                    self.medical_clearance_combo.setCurrentIndex(i)
                    break
        
        # üî• –í–ê–ñ–õ–ò–í–û: –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        # –¶–µ –∑–∞–±–µ–∑–ø–µ—á—É—î –¥–∏–Ω–∞–º—ñ—á–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –≤–∫–ª–∞–¥–∫–∏
        self._update_calculations()
    
    def get_data(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –≤–∫–ª–∞–¥–∫–∏"""
        return {
            'height': self.height_spin.value(),
            'weight': self.weight_spin.value(),
            'bp_systolic': self.bp_systolic_spin.value(),
            'bp_diastolic': self.bp_diastolic_spin.value(),
            'heart_rate': self.heart_rate_spin.value(),
            'medical_exam_date': self.medical_exam_date_edit.date().toPython().isoformat(),
            'medical_clearance': self.medical_clearance_combo.currentText(),
            'water_intake': self.water_intake_spin.value(),
            'menstrual_cycle': self.menstrual_cycle_edit.text().strip()
        }
    
    # ===== –°–ü–†–û–©–ï–ù–Ü –ú–ï–¢–û–î–ò –†–û–ó–†–ê–•–£–ù–ö–Ü–í =====
    
    def _calculate_hr_zones_simple(self, age):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—É–ª—å—Å–æ–≤–∏—Ö –∑–æ–Ω"""
        max_hr = 220 - age
        
        result_text = f"""
        <div style='background: #F8F9FA; padding: 12px; border-radius: 8px; color: #374151; font-weight: 600;'>
            <div style='font-size: 16px; margin-bottom: 8px;'>üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –ø—É–ª—å—Å: {max_hr} —É–¥/—Ö–≤</div>
            <div style='font-size: 14px; margin-bottom: 6px;'>–í—ñ–∫: {age} —Ä–æ–∫—ñ–≤</div>
            <div style='font-size: 12px; color: #10B981;'>üòå –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø: {int(max_hr * 0.5)}-{int(max_hr * 0.6)} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #F59E0B;'>üî• –ñ–ò–†–û–°–ü–ê–õ–Æ–í–ê–ù–ù–Ø: {int(max_hr * 0.6)}-{int(max_hr * 0.7)} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #3B82F6;'>üèÉ –ê–ï–†–û–ë–ù–ê: {int(max_hr * 0.7)}-{int(max_hr * 0.8)} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #8B5CF6;'>‚ö° –ê–ù–ê–ï–†–û–ë–ù–ê: {int(max_hr * 0.8)}-{int(max_hr * 0.9)} —É–¥/—Ö–≤</div>
            <div style='font-size: 12px; color: #EF4444;'>üî• –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê: {int(max_hr * 0.9)}-{max_hr} —É–¥/—Ö–≤</div>
        </div>
        """
        
        self.hr_zones_display.setText(result_text)
        self.hr_zones_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_hr_status_simple(self, hr_rest):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞—Ç—É—Å—É –ß–°–°"""
        if hr_rest < 60:
            status = "‚úÖ –í—ñ–¥–º—ñ–Ω–Ω–∏–π"
            description = "–î—É–∂–µ –¥–æ–±—Ä—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏"
            color = "#10B981"
            bg_color = "#D1FAE5"
        elif hr_rest < 70:
            status = "üëç –•–æ—Ä–æ—à–∏–π"
            description = "–ù–æ—Ä–º–∞–ª—å–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏"
            color = "#3B82F6"
            bg_color = "#DBEAFE"
        elif hr_rest < 80:
            status = "üìà –ù–æ—Ä–º–∞–ª—å–Ω–∏–π"
            description = "–°–µ—Ä–µ–¥–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        else:
            status = "üî• –ü—ñ–¥–≤–∏—â–µ–Ω–∏–π"
            description = "–ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–ß–°–°: {hr_rest} —É–¥/—Ö–≤</div>
            <div style='font-size: 14px; margin-top: 4px;'>{status}</div>
            <div style='font-size: 12px; color: #6B7280; margin-top: 4px;'>{description}</div>
        </div>
        """
        
        self.hr_status_display.setText(result_text)
        self.hr_status_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_bmi_simple(self, height_cm, weight_kg):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ü–ú–¢"""
        height_m = height_cm / 100
        bmi = weight_kg / (height_m ** 2)
        
        if bmi < 18.5:
            category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –≤–∞–≥–∞"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        elif bmi < 25:
            category = "–ù–æ—Ä–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞"
            color = "#10B981"
            bg_color = "#D1FAE5"
        elif bmi < 30:
            category = "–ù–∞–¥–º—ñ—Ä–Ω–∞ –≤–∞–≥–∞"
            color = "#F59E0B"
            bg_color = "#FEF3C7"
        else:
            category = "–û–∂–∏—Ä—ñ–Ω–Ω—è"
            color = "#EF4444"
            bg_color = "#FEE2E2"
        
        result_text = f"""
        <div style='background: {bg_color}; padding: 8px; border-radius: 6px; color: {color}; font-weight: 600;'>
            <div style='font-size: 16px;'>–Ü–ú–¢: {bmi:.1f}</div>
            <div style='font-size: 14px; margin-top: 4px;'>{category}</div>
        </div>
        """
        
        self.bmi_display.setText(result_text)
        self.bmi_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_bmr_simple(self, height_cm, weight_kg, age, gender):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ BMR"""
        if gender == "male":
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age + 5
        else:  # female
            bmr = 10 * weight_kg + 6.25 * height_cm - 5 * age - 161
        
        result_text = f"""
        <div style='background: #FEF3C7; padding: 8px; border-radius: 6px; color: #D97706; font-weight: 600;'>
            <div style='font-size: 16px;'>BMR: {int(bmr)} –∫–∫–∞–ª/–¥–µ–Ω—å</div>
            <div style='font-size: 12px; margin-top: 4px; font-weight: normal;'>–ë–∞–∑–∞–ª—å–Ω–∏–π –º–µ—Ç–∞–±–æ–ª—ñ–∑–º</div>
        </div>
        """
        
        self.bmr_display.setText(result_text)
        self.bmr_display.setStyleSheet("QLabel { background: transparent; border: none; }")
    
    def _calculate_water_simple(self, weight_kg):
        """–°–ø—Ä–æ—â–µ–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–æ—Ä–º–∏ –≤–æ–¥–∏"""
        water_liters = round(weight_kg * 0.035, 1)
        
        result_text = f"""
        <div style='background: #E0F2FE; padding: 8px; border-radius: 6px; color: #0891B2; font-weight: 600;'>
            <div style='font-size: 16px;'>–ù–æ—Ä–º–∞ –≤–æ–¥–∏: {water_liters} –ª/–¥–µ–Ω—å</div>
            <div style='font-size: 12px; margin-top: 4px; font-weight: normal;'>35 –º–ª –Ω–∞ 1 –∫–≥ –≤–∞–≥–∏</div>
        </div>
        """
        
        self.water_display.setText(result_text)
        self.water_display.setStyleSheet("QLabel { background: transparent; border: none; }")
