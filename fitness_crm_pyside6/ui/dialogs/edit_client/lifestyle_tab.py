# ui/dialogs/edit_client/lifestyle_tab.py
"""–í–∫–ª–∞–¥–∫–∞ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è –∫–ª—ñ—î–Ω—Ç–∞"""
from PySide6.QtCore import QTime
from PySide6.QtWidgets import QWidget, QVBoxLayout, QFormLayout, QGroupBox, QScrollArea
from qfluentwidgets import ComboBox, TextEdit, LineEdit, TimeEdit, SpinBox


class LifestyleTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è –∫–ª—ñ—î–Ω—Ç–∞"""
    
    def __init__(self, client_data=None, parent=None):
        super().__init__(parent)
        self.client_data = client_data or {}
        self._init_ui()
        self._load_data()
    
    def _init_ui(self):
        """–°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏"""
        scroll = QScrollArea(self)
        scroll.setWidgetResizable(True)
        scroll.setStyleSheet("QScrollArea { border: none; background: transparent; }")
        
        main_widget = QWidget()
        scroll.setWidget(main_widget)
        
        main_layout = QVBoxLayout(self)
        main_layout.addWidget(scroll)
        
        content_layout = QVBoxLayout(main_widget)
        content_layout.setContentsMargins(20, 20, 20, 20)
        content_layout.setSpacing(20)
        
        # ===== –ê–ö–¢–ò–í–ù–Ü–°–¢–¨ –¢–ê –•–ê–†–ß–£–í–ê–ù–ù–Ø =====
        activity_group = QGroupBox("üèÉ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è")
        activity_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(activity_group)
        
        activity_form = QFormLayout(activity_group)
        activity_form.setSpacing(15)
        activity_form.setContentsMargins(20, 25, 20, 20)
        
        self.activity_level_combo = ComboBox()
        self.activity_level_combo.addItems([
            "–°–∏–¥—è—á–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è",
            "–ú–∞–ª–æ–∞–∫—Ç–∏–≤–Ω–∏–π",
            "–ü–æ–º—ñ—Ä–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏–π",
            "–ê–∫—Ç–∏–≤–Ω–∏–π",
            "–î—É–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π"
        ])
        self.activity_level_combo.setMinimumHeight(40)
        activity_form.addRow("üìä –†—ñ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:", self.activity_level_combo)
        
        self.food_preferences_edit = TextEdit()
        self.food_preferences_edit.setPlaceholderText("–î—ñ—î—Ç–∏—á–Ω—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è, —É–ø–æ–¥–æ–±–∞–Ω–Ω—è")
        self.food_preferences_edit.setMaximumHeight(80)
        activity_form.addRow("üçΩÔ∏è –•–∞—Ä—á–æ–≤—ñ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è:", self.food_preferences_edit)
        
        # ===== –†–ï–ñ–ò–ú –î–ù–Ø =====
        schedule_group = QGroupBox("üïê –†–µ–∂–∏–º –¥–Ω—è")
        schedule_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(schedule_group)
        
        schedule_form = QFormLayout(schedule_group)
        schedule_form.setSpacing(15)
        schedule_form.setContentsMargins(20, 25, 20, 20)
        
        self.wake_time_edit = TimeEdit()
        self.wake_time_edit.setTime(QTime(7, 0))
        self.wake_time_edit.setMinimumHeight(40)
        schedule_form.addRow("üåÖ –ß–∞—Å –ø—ñ–¥–π–æ–º—É:", self.wake_time_edit)
        
        self.sleep_time_edit = TimeEdit()
        self.sleep_time_edit.setTime(QTime(23, 0))
        self.sleep_time_edit.setMinimumHeight(40)
        schedule_form.addRow("üåô –ß–∞—Å –∑–∞—Å–∏–Ω–∞–Ω–Ω—è:", self.sleep_time_edit)
        
        self.sleep_duration_spin = SpinBox()
        self.sleep_duration_spin.setRange(4, 12)
        self.sleep_duration_spin.setValue(8)
        self.sleep_duration_spin.setSuffix(" –≥–æ–¥–∏–Ω")
        self.sleep_duration_spin.setMinimumHeight(40)
        schedule_form.addRow("‚è∞ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å–Ω—É:", self.sleep_duration_spin)
        
        self.sleep_quality_combo = ComboBox()
        self.sleep_quality_combo.addItems([
            "–ü–æ–≥–∞–Ω–∞", "–ó–∞–¥–æ–≤—ñ–ª—å–Ω–∞", "–•–æ—Ä–æ—à–∞", "–í—ñ–¥–º—ñ–Ω–Ω–∞"
        ])
        self.sleep_quality_combo.setMinimumHeight(40)
        schedule_form.addRow("üí§ –Ø–∫—ñ—Å—Ç—å —Å–Ω—É:", self.sleep_quality_combo)
        
        self.night_awakenings_spin = SpinBox()
        self.night_awakenings_spin.setRange(0, 10)
        self.night_awakenings_spin.setValue(0)
        self.night_awakenings_spin.setSuffix(" —Ä–∞–∑—ñ–≤")
        self.night_awakenings_spin.setMinimumHeight(40)
        schedule_form.addRow("üåú –ü—Ä–æ–∫–∏–¥–∞–Ω–Ω—è –≤–Ω–æ—á—ñ:", self.night_awakenings_spin)
        
        # ===== –°–ü–û–†–¢–ò–í–ù–ò–ô –î–û–°–í–Ü–î =====
        sports_group = QGroupBox("üèÜ –°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –¥–æ—Å–≤—ñ–¥")
        sports_group.setStyleSheet(self._get_group_style())
        content_layout.addWidget(sports_group)
        
        sports_form = QFormLayout(sports_group)
        sports_form.setSpacing(15)
        sports_form.setContentsMargins(20, 25, 20, 20)
        
        self.other_sports_edit = TextEdit()
        self.other_sports_edit.setPlaceholderText("–í–∏–¥ —Ç–∞ —á–∞—Å—Ç–æ—Ç–∞ —ñ–Ω—à–∏—Ö –≤–∏–¥—ñ–≤ —Å–ø–æ—Ä—Ç—É")
        self.other_sports_edit.setMaximumHeight(80)
        sports_form.addRow("‚öΩ –Ü–Ω—à—ñ –∑–∞–Ω—è—Ç—Ç—è —Å–ø–æ—Ä—Ç–æ–º:", self.other_sports_edit)
        
        self.past_experience_edit = TextEdit()
        self.past_experience_edit.setPlaceholderText("–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –¥–æ—Å–≤—ñ–¥")
        self.past_experience_edit.setMaximumHeight(80)
        sports_form.addRow("üìö –ú–∏–Ω—É–ª–∏–π –¥–æ—Å–≤—ñ–¥:", self.past_experience_edit)
        
        self.fitness_level_combo = ComboBox()
        self.fitness_level_combo.addItems([
            "–ù–∏–∑—å–∫–∞", "–°–µ—Ä–µ–¥–Ω—è", "–í–∏—Å–æ–∫–∞"
        ])
        self.fitness_level_combo.setMinimumHeight(40)
        sports_form.addRow("üí™ –§—ñ–∑–∏—á–Ω–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞:", self.fitness_level_combo)
        
        self.motivation_level_combo = ComboBox()
        self.motivation_level_combo.addItems([
            "–ù–∏–∑—å–∫–∞", "–°–µ—Ä–µ–¥–Ω—è", "–í–∏—Å–æ–∫–∞"
        ])
        self.motivation_level_combo.setMinimumHeight(40)
        sports_form.addRow("üî• –ú–æ—Ç–∏–≤–∞—Ü—ñ—è:", self.motivation_level_combo)
        
        content_layout.addStretch()
    
    def _get_group_style(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∏–ª—å –¥–ª—è –≥—Ä—É–ø–∏"""
        return """
            QGroupBox {
                font-size: 16px;
                font-weight: 600;
                color: #111827;
                border: 2px solid #E5E7EB;
                border-radius: 8px;
                padding-top: 10px;
                margin-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 8px 0 8px;
                background-color: white;
            }
        """
    
    def _load_data(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞"""
        if not self.client_data:
            return
        
        # –†—ñ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        activity_level = self.client_data.get('activity_level', '')
        if activity_level in ['–°–∏–¥—è—á–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è', '–ú–∞–ª–æ–∞–∫—Ç–∏–≤–Ω–∏–π', '–ü–æ–º—ñ—Ä–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏–π', '–ê–∫—Ç–∏–≤–Ω–∏–π', '–î—É–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π']:
            self.activity_level_combo.setCurrentText(activity_level)
        
        self.food_preferences_edit.setText(self.client_data.get('food_preferences', ''))
        
        # –†–µ–∂–∏–º –¥–Ω—è
        if 'wake_time' in self.client_data:
            try:
                wake_time = QTime.fromString(self.client_data['wake_time'], "hh:mm")
                self.wake_time_edit.setTime(wake_time)
            except:
                pass
        
        if 'sleep_time' in self.client_data:
            try:
                sleep_time = QTime.fromString(self.client_data['sleep_time'], "hh:mm")
                self.sleep_time_edit.setTime(sleep_time)
            except:
                pass
        
        self.sleep_duration_spin.setValue(self.client_data.get('sleep_duration', 8))
        
        sleep_quality = self.client_data.get('sleep_quality', '')
        if sleep_quality in ['–ü–æ–≥–∞–Ω–∞', '–ó–∞–¥–æ–≤—ñ–ª—å–Ω–∞', '–•–æ—Ä–æ—à–∞', '–í—ñ–¥–º—ñ–Ω–Ω–∞']:
            self.sleep_quality_combo.setCurrentText(sleep_quality)
        
        self.night_awakenings_spin.setValue(self.client_data.get('night_awakenings', 0))
        
        # –°–ø–æ—Ä—Ç
        self.other_sports_edit.setText(self.client_data.get('other_sports', ''))
        self.past_experience_edit.setText(self.client_data.get('past_experience', ''))
        
        fitness_level = self.client_data.get('fitness_level', '')
        if fitness_level in ['–ù–∏–∑—å–∫–∞', '–°–µ—Ä–µ–¥–Ω—è', '–í–∏—Å–æ–∫–∞']:
            self.fitness_level_combo.setCurrentText(fitness_level)
        
        motivation_level = self.client_data.get('motivation_level', '')
        if motivation_level in ['–ù–∏–∑—å–∫–∞', '–°–µ—Ä–µ–¥–Ω—è', '–í–∏—Å–æ–∫–∞']:
            self.motivation_level_combo.setCurrentText(motivation_level)
    
    def get_data(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –≤–∫–ª–∞–¥–∫–∏"""
        return {
            'activity_level': self.activity_level_combo.currentText(),
            'food_preferences': self.food_preferences_edit.toPlainText().strip(),
            'wake_time': self.wake_time_edit.time().toString("hh:mm"),
            'sleep_time': self.sleep_time_edit.time().toString("hh:mm"),
            'sleep_duration': self.sleep_duration_spin.value(),
            'sleep_quality': self.sleep_quality_combo.currentText(),
            'night_awakenings': self.night_awakenings_spin.value(),
            'other_sports': self.other_sports_edit.toPlainText().strip(),
            'past_experience': self.past_experience_edit.toPlainText().strip(),
            'fitness_level': self.fitness_level_combo.currentText(),
            'motivation_level': self.motivation_level_combo.currentText()
        }
