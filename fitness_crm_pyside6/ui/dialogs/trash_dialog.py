# ui/dialogs/trash_dialog.py
"""–î—ñ–∞–ª–æ–≥ –∫–æ—Ä–∑–∏–Ω–∏ –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤"""
from PySide6.QtCore import Qt, Signal
from PySide6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
                               QPushButton, QTableWidget, QTableWidgetItem, QHeaderView)
from PySide6.QtGui import QFont
from qfluentwidgets import MessageBox, InfoBar, InfoBarPosition, PrimaryPushButton
import os
import json
import shutil
from datetime import datetime


class TrashDialog(QDialog):
    """–î—ñ–∞–ª–æ–≥ –∫–æ—Ä–∑–∏–Ω–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏"""
    
    # –°–∏–≥–Ω–∞–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
    client_restored = Signal()
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞")
        self.setModal(True)
        self.resize(900, 600)
        self.setStyleSheet("""
            QDialog {
                background-color: #F9FAFB;
            }
        """)
        
        self._init_ui()
        self._load_trash_items()
    
    def _init_ui(self):
        """–°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥—ñ–∞–ª–æ–≥—É"""
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è
        header_layout = QHBoxLayout()
        
        title_label = QLabel("üóëÔ∏è –ö–û–†–ó–ò–ù–ê")
        title_font = QFont()
        title_font.setPointSize(24)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setStyleSheet("color: #374151;")
        
        clear_button = QPushButton("üßπ –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É")
        clear_button.setFixedHeight(40)
        clear_button.setStyleSheet("""
            QPushButton {
                background-color: #DC2626;
                color: white;
                border: none;
                border-radius: 8px;
                font-weight: bold;
                padding: 8px 16px;
            }
            QPushButton:hover {
                background-color: #B91C1C;
            }
        """)
        clear_button.clicked.connect(self._clear_all_trash)
        
        header_layout.addWidget(title_label)
        header_layout.addStretch()
        header_layout.addWidget(clear_button)
        
        # –¢–∞–±–ª–∏—Ü—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        self.table = QTableWidget()
        self.table.setColumnCount(5)
        self.table.setHorizontalHeaderLabels([
            "–¢–∏–ø", "–ù–∞–∑–≤–∞", "–í–ª–∞—Å–Ω–∏–∫", "–î–∞—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è", "–î—ñ—ó"
        ])
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
        self.table.setAlternatingRowColors(True)
        self.table.setSelectionBehavior(QTableWidget.SelectRows)
        self.table.verticalHeader().setVisible(False)
        self.table.setRowHeight(0, 60)  # –§—ñ–∫—Å–æ–≤–∞–Ω–∞ –≤–∏—Å–æ—Ç–∞ —Ä—è–¥–∫—ñ–≤ 60px
        self.table.setStyleSheet("""
            QTableWidget {
                background-color: white;
                border: 1px solid #E5E7EB;
                border-radius: 8px;
                gridline-color: #F3F4F6;
                selection-background-color: #DBEAFE;
                selection-color: #1E40AF;
            }
            QHeaderView::section {
                background-color: #F9FAFB;
                color: #374151;
                font-weight: 600;
                padding: 8px;
                border: none;
                border-bottom: 1px solid #E5E7EB;
            }
            QTableWidget::item {
                padding: 8px;
                border-bottom: 1px solid #F3F4F6;
            }
            QTableWidget::item:selected {
                background-color: #DBEAFE;
                color: #1E40AF;
            }
        """)
        
        # –†–æ–∑—Ç—è–≥—É—î–º–æ —Å—Ç–æ–≤–ø—Ü—ñ
        header = self.table.horizontalHeader()
        header.setSectionResizeMode(0, QHeaderView.ResizeToContents)  # –¢–∏–ø
        header.setSectionResizeMode(1, QHeaderView.Stretch)          # –ù–∞–∑–≤–∞
        header.setSectionResizeMode(2, QHeaderView.ResizeToContents)  # –í–ª–∞—Å–Ω–∏–∫
        header.setSectionResizeMode(3, QHeaderView.ResizeToContents)  # –î–∞—Ç–∞
        header.setSectionResizeMode(4, QHeaderView.Stretch)          # –î—ñ—ó
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è
        close_button = QPushButton("–ó–∞–∫—Ä–∏—Ç–∏")
        close_button.setFixedHeight(40)
        close_button.setStyleSheet("""
            QPushButton {
                background-color: #6B7280;
                color: white;
                border: none;
                border-radius: 8px;
                font-weight: bold;
                padding: 8px 16px;
            }
            QPushButton:hover {
                background-color: #4B5563;
            }
        """)
        close_button.clicked.connect(self.accept)
        
        # –î–æ–¥–∞—î–º–æ –¥–æ –º–∞–∫–µ—Ç—É
        main_layout.addLayout(header_layout)
        main_layout.addWidget(self.table)
        
        close_layout = QHBoxLayout()
        close_layout.addStretch()
        close_layout.addWidget(close_button)
        main_layout.addLayout(close_layout)
    
    def _load_trash_items(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫–æ—Ä–∑–∏–Ω–∏"""
        trash_dir = "data/trash"
        if not os.path.exists(trash_dir):
            return
        
        items = []
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–∞–ø–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
        for item_name in os.listdir(trash_dir):
            item_path = os.path.join(trash_dir, item_name)
            if os.path.isdir(item_path):
                # –¶–µ –ø–∞–ø–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞
                try:
                    # –®—É–∫–∞—î–º–æ JSON —Ñ–∞–π–ª –∫–ª—ñ—î–Ω—Ç–∞
                    json_files = [f for f in os.listdir(item_path) if f.endswith('.json')]
                    if json_files:
                        json_path = os.path.join(item_path, json_files[0])
                        with open(json_path, 'r', encoding='utf-8') as f:
                            client_data = json.load(f)
                        
                        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞—Ç—É –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –º—ñ—Ç–∫–∏ —á–∞—Å—É –ø–∞–ø–∫–∏
                        stat = os.stat(item_path)
                        delete_date = datetime.fromtimestamp(stat.st_mtime).strftime("%d.%m.%Y")
                        
                        items.append({
                            'type': 'üë§ –ö–ª—ñ—î–Ω—Ç',
                            'name': client_data.get('full_name', item_name),
                            'owner': '-',
                            'delete_date': delete_date,
                            'path': item_path,
                            'data': client_data
                        })
                except:
                    continue
        
        # –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
        self.table.setRowCount(len(items))
        for row, item in enumerate(items):
            # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–∏—Å–æ—Ç—É —Ä—è–¥–∫–∞
            self.table.setRowHeight(row, 60)
            
            # –¢–∏–ø
            self.table.setItem(row, 0, QTableWidgetItem(item['type']))
            
            # –ù–∞–∑–≤–∞
            self.table.setItem(row, 1, QTableWidgetItem(item['name']))
            
            # –í–ª–∞—Å–Ω–∏–∫
            self.table.setItem(row, 2, QTableWidgetItem(item['owner']))
            
            # –î–∞—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            self.table.setItem(row, 3, QTableWidgetItem(item['delete_date']))
            
            # –ö–Ω–æ–ø–∫–∏ –¥—ñ–π
            self._add_action_buttons(row, item)
    
    def _add_action_buttons(self, row: int, item: dict):
        """–î–æ–¥–∞—î –∫–Ω–æ–ø–∫–∏ –¥—ñ–π –¥–ª—è —Ä—è–¥–∫–∞"""
        from PySide6.QtWidgets import QWidget, QHBoxLayout
        
        widget = QWidget()
        layout = QHBoxLayout(widget)
        layout.setContentsMargins(5, 5, 5, 5)
        layout.setSpacing(5)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
        restore_btn = QPushButton("‚ôªÔ∏è –í—ñ–¥–Ω–æ–≤–∏—Ç–∏")
        restore_btn.setStyleSheet("""
            QPushButton {
                background-color: #F0FDF4;
                color: #15803D;
                border: 1px solid #22C55E;
                border-radius: 6px;
                padding: 6px 12px;
                font-size: 12px;
                font-weight: 500;
            }
            QPushButton:hover {
                background-color: #DCFCE7;
                border-color: #16A34A;
            }
        """)
        restore_btn.clicked.connect(lambda: self._restore_item(item))
        
        # –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        delete_btn = QPushButton("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏")
        delete_btn.setStyleSheet("""
            QPushButton {
                background-color: #FEF2F2;
                color: #DC2626;
                border: 1px solid #EF4444;
                border-radius: 6px;
                padding: 6px 12px;
                font-size: 12px;
                font-weight: 500;
            }
            QPushButton:hover {
                background-color: #FEE2E2;
                border-color: #DC2626;
            }
        """)
        delete_btn.clicked.connect(lambda: self._permanent_delete_item(item))
        
        layout.addWidget(restore_btn)
        layout.addWidget(delete_btn)
        layout.addStretch()
        
        self.table.setCellWidget(row, 4, widget)
    
    def _restore_item(self, item: dict):
        """–í—ñ–¥–Ω–æ–≤–ª—é—î –µ–ª–µ–º–µ–Ω—Ç –∑ –∫–æ—Ä–∑–∏–Ω–∏"""
        result = MessageBox(
            title="‚ôªÔ∏è –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è",
            content=f"–í—ñ–¥–Ω–æ–≤–∏—Ç–∏ '{item['name']}'?",
            parent=self
        ).exec()
        
        if result == 1:  # 1 –æ–∑–Ω–∞—á–∞—î "–¢–∞–∫" –≤ QFluentWidgets
            try:
                # –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
                if item['type'] == 'üë§ –ö–ª—ñ—î–Ω—Ç':
                    clients_dir = "data/clients"
                    os.makedirs(clients_dir, exist_ok=True)
                    
                    # –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ JSON —Ñ–∞–π–ª –Ω–∞–∑–∞–¥
                    json_files = [f for f in os.listdir(item['path']) if f.endswith('.json')]
                    if json_files:
                        src_path = os.path.join(item['path'], json_files[0])
                        dst_path = os.path.join(clients_dir, json_files[0])
                        shutil.move(src_path, dst_path)
                    
                    # –í–∏–¥–∞–ª—è—î–º–æ –ø–∞–ø–∫—É –∑ –∫–æ—Ä–∑–∏–Ω–∏
                    shutil.rmtree(item['path'])
                
                InfoBar.success(
                    title="–£—Å–ø—ñ—Ö",
                    content=f"'{item['name']}' –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
                
                # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
                self._load_trash_items()
                
                # –°–ø–æ–≤—ñ—â–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
                self.client_restored.emit()
                
            except Exception as e:
                InfoBar.error(
                    title="–ü–æ–º–∏–ª–∫–∞",
                    content=f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è: {str(e)}",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
    
    def _permanent_delete_item(self, item: dict):
        """–ë–µ–∑–ø–æ–≤–æ—Ä–æ—Ç–Ω–æ –≤–∏–¥–∞–ª—è—î –µ–ª–µ–º–µ–Ω—Ç"""
        result = MessageBox(
            title="‚ùå –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è",
            content=f"–ë–ï–ó–ü–û–í–û–†–û–¢–ù–û –≤–∏–¥–∞–ª–∏—Ç–∏ '{item['name']}'?\n\n–¶—é –¥—ñ—é –ù–ï –ú–û–ñ–ù–ê –±—É–¥–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏!",
            parent=self
        ).exec()
        
        if result == 1:  # 1 –æ–∑–Ω–∞—á–∞—î "–¢–∞–∫" –≤ QFluentWidgets
            try:
                shutil.rmtree(item['path'])
                
                InfoBar.success(
                    title="–£—Å–ø—ñ—Ö",
                    content=f"'{item['name']}' –±–µ–∑–ø–æ–≤–æ—Ä–æ—Ç–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
                
                # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
                self._load_trash_items()
                
            except Exception as e:
                InfoBar.error(
                    title="–ü–æ–º–∏–ª–∫–∞",
                    content=f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è: {str(e)}",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
    
    def _clear_all_trash(self):
        """–û—á–∏—â–∞—î –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É"""
        result = MessageBox(
            title="üßπ –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è",
            content="–ë–ï–ó–ü–û–í–û–†–û–¢–ù–û –≤–∏–¥–∞–ª–∏—Ç–∏ –í–°–Ü –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫–æ—Ä–∑–∏–Ω–∏?\n\n–¶—é –¥—ñ—é –ù–ï –ú–û–ñ–ù–ê –±—É–¥–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏!",
            parent=self
        ).exec()
        
        if result == 1:  # 1 –æ–∑–Ω–∞—á–∞—î "–¢–∞–∫" –≤ QFluentWidgets
            try:
                trash_dir = "data/trash"
                if os.path.exists(trash_dir):
                    shutil.rmtree(trash_dir)
                    os.makedirs(trash_dir, exist_ok=True)
                
                InfoBar.success(
                    title="–£—Å–ø—ñ—Ö",
                    content="–ö–æ—Ä–∑–∏–Ω—É –æ—á–∏—â–µ–Ω–æ",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
                
                # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
                self._load_trash_items()
                
            except Exception as e:
                InfoBar.error(
                    title="–ü–æ–º–∏–ª–∫–∞",
                    content=f"–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: {str(e)}",
                    orient=Qt.Horizontal,
                    isClosable=True,
                    position=InfoBarPosition.TOP,
                    duration=3000,
                    parent=self
                )
