# ui/widgets/photo_card.py
"""–ö—Ä–∞—Å–∏–≤–∞ —Ñ–æ—Ç–æ–∫–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º"""
from PySide6.QtCore import Qt, Signal, QPropertyAnimation, QEasingCurve, QRect, QSize
from PySide6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QLabel, 
                               QGraphicsDropShadowEffect, QPushButton, QFrame)
from PySide6.QtGui import QPixmap, QPainter, QPainterPath, QColor, QFont, QLinearGradient
from qfluentwidgets import CardWidget, ImageLabel, CaptionLabel, BodyLabel, StrongBodyLabel
from qfluentwidgets import TransparentToolButton, FluentIcon as FIF, PrimaryPushButton
from ui.styles import COLORS, get_button_style
import os


class PhotoCard(CardWidget):
    """–î–µ—Ç–∞–ª—å–Ω–∞ —Ñ–æ—Ç–æ–∫–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ 320x620px"""
    
    clicked = Signal(str)  # –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –∫–ª—ñ–∫—É (–ø–µ—Ä–µ–¥–∞—î ID –∫–ª—ñ—î–Ω—Ç–∞)
    edit_requested = Signal(str)  # –°–∏–≥–Ω–∞–ª –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    view_requested = Signal(str)  # –°–∏–≥–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É
    message_requested = Signal(str)  # –°–∏–≥–Ω–∞–ª –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    ai_requested = Signal(str)  # –°–∏–≥–Ω–∞–ª –¥–ª—è AI –ø–æ–º—ñ—á–Ω–∏–∫–∞
    
    def __init__(self, client_data: dict, parent=None):
        super().__init__(parent)
        self.client_data = client_data
        self.setFixedSize(320, 620)  # –ù–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–∏–º–æ–≥
        self.setCursor(Qt.PointingHandCursor)
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏
        self.setBorderRadius(16)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç—ñ–Ω—å
        self.shadow = QGraphicsDropShadowEffect(self)
        self.shadow.setBlurRadius(25)
        self.shadow.setColor(QColor(0, 0, 0, 40))
        self.shadow.setOffset(0, 6)
        self.setGraphicsEffect(self.shadow)
        
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ UI
        self._init_ui()
        
        # –ê–Ω—ñ–º–∞—Ü—ñ—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
        self._init_animations()
    
    def _init_ui(self):
        """–°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞—Ä—Ç–∫–∏ –∑ –Ω–æ–≤–∏–º –¥–∏–∑–∞–π–Ω–æ–º"""
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(15, 15, 15, 15)
        main_layout.setSpacing(12)
        
        # ===== –°–ï–ö–¶–Ü–Ø –§–û–¢–û–ì–†–ê–§–Ü–á (270x350px) =====
        self.photo_container = QFrame()
        self.photo_container.setFixedSize(270, 350)
        self.photo_container.setStyleSheet("""
            QFrame {
                background: #f8f9fa;
                border: 2px solid #e9ecef;
                border-radius: 12px;
            }
        """)
        
        # Layout –¥–ª—è —Ñ–æ—Ç–æ —Å–µ–∫—Ü—ñ—ó
        photo_layout = QVBoxLayout(self.photo_container)
        photo_layout.setContentsMargins(0, 0, 0, 0)
        photo_layout.setAlignment(Qt.AlignCenter)
        
        # –§–æ—Ç–æ –∞–±–æ —ñ–∫–æ–Ω–∫–∞
        self.photo_widget = QLabel()
        self.photo_widget.setFixedSize(270, 350)
        self.photo_widget.setAlignment(Qt.AlignCenter)
        self.photo_widget.setStyleSheet("border: none; border-radius: 10px;")
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–æ—Ç–æ –∞–±–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É
        self._load_photo()
        
        photo_layout.addWidget(self.photo_widget)
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —É –ø—Ä–∞–≤–æ–º—É –≤–µ—Ä—Ö–Ω—å–æ–º—É –∫—É—Ç—ñ —Ñ–æ—Ç–æ
        self._create_photo_action_buttons()
        
        # ===== –Ü–ú'–Ø –ö–õ–Ü–Ñ–ù–¢–ê (270x48px) =====
        self.name_container = QFrame()
        self.name_container.setFixedSize(270, 48)
        self.name_container.setStyleSheet("""
            QFrame {
                background: white;
                border: 1px solid #e5e7eb;
                border-radius: 8px;
            }
        """)
        
        name_layout = QVBoxLayout(self.name_container)
        name_layout.setContentsMargins(12, 0, 12, 0)
        name_layout.setAlignment(Qt.AlignCenter)
        
        self.name_label = QLabel(self.client_data.get('full_name', '–ë–µ–∑ —ñ–º–µ–Ω—ñ'))
        self.name_label.setStyleSheet("""
            QLabel {
                font-size: 18px;
                font-weight: 600;
                color: #111827;
                background: transparent;
                border: none;
            }
        """)
        self.name_label.setAlignment(Qt.AlignCenter)
        name_layout.addWidget(self.name_label)
        
        # ===== –¢–ï–õ–ï–§–û–ù –ö–õ–Ü–Ñ–ù–¢–ê (270x42px) =====
        self.phone_container = QFrame()
        self.phone_container.setFixedSize(270, 42)
        self.phone_container.setStyleSheet("""
            QFrame {
                background: white;
                border: 1px solid #e5e7eb;
                border-radius: 8px;
            }
        """)
        
        phone_layout = QVBoxLayout(self.phone_container)
        phone_layout.setContentsMargins(12, 0, 12, 0)
        phone_layout.setAlignment(Qt.AlignCenter)
        
        self.phone_label = QLabel(self.client_data.get('phone', '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –≤–∫–∞–∑–∞–Ω–æ'))
        self.phone_label.setStyleSheet("""
            QLabel {
                font-size: 15px;
                font-weight: 500;
                color: #374151;
                background: transparent;
                border: none;
            }
        """)
        self.phone_label.setAlignment(Qt.AlignCenter)
        phone_layout.addWidget(self.phone_label)
        
        # ===== –ö–ù–û–ü–ö–ò –î–Ü–ô =====
        self._create_action_buttons()
        
        # –î–æ–¥–∞—î–º–æ –≤—Å—ñ —Å–µ–∫—Ü—ñ—ó –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ layout
        main_layout.addWidget(self.photo_container, 0, Qt.AlignCenter)
        main_layout.addWidget(self.name_container, 0, Qt.AlignCenter)
        main_layout.addWidget(self.phone_container, 0, Qt.AlignCenter)
        main_layout.addWidget(self.action_buttons_container, 0, Qt.AlignCenter)
        main_layout.addStretch()
        
    def _create_photo_action_buttons(self):
        """–°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —É –ø—Ä–∞–≤–æ–º—É –≤–µ—Ä—Ö–Ω—å–æ–º—É –∫—É—Ç—ñ —Ñ–æ—Ç–æ"""
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
        buttons_widget = QWidget(self.photo_container)
        buttons_widget.setFixedSize(80, 40)
        buttons_widget.move(185, 10)  # –ü–æ–∑–∏—Ü—ñ–æ–Ω—É—î–º–æ —É –ø—Ä–∞–≤–æ–º—É –≤–µ—Ä—Ö–Ω—å–æ–º—É –∫—É—Ç—ñ
        
        buttons_layout = QHBoxLayout(buttons_widget)
        buttons_layout.setContentsMargins(5, 5, 5, 5)
        buttons_layout.setSpacing(5)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        self.delete_btn = TransparentToolButton(FIF.DELETE)
        self.delete_btn.setFixedSize(30, 30)
        self.delete_btn.setToolTip("–í–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞")
        self.delete_btn.setStyleSheet("""
            TransparentToolButton {
                background: rgba(239, 68, 68, 0.8);
                border-radius: 15px;
            }
            TransparentToolButton:hover {
                background: rgba(239, 68, 68, 1.0);
            }
        """)
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        self.edit_photo_btn = TransparentToolButton(FIF.EDIT)
        self.edit_photo_btn.setFixedSize(30, 30)
        self.edit_photo_btn.setToolTip("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞")
        self.edit_photo_btn.setStyleSheet("""
            TransparentToolButton {
                background: rgba(59, 130, 246, 0.8);
                border-radius: 15px;
            }
            TransparentToolButton:hover {
                background: rgba(59, 130, 246, 1.0);
            }
        """)
        
        buttons_layout.addWidget(self.delete_btn)
        buttons_layout.addWidget(self.edit_photo_btn)
        
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å–∏–≥–Ω–∞–ª–∏
        self.edit_photo_btn.clicked.connect(lambda: self.edit_requested.emit(self.client_data.get('id', '')))
        
    def _create_action_buttons(self):
        """–°—Ç–≤–æ—Ä—é—î –æ—Å–Ω–æ–≤–Ω—ñ –∫–Ω–æ–ø–∫–∏ –¥—ñ–π –≤–Ω–∏–∑—É –∫–∞—Ä—Ç–∫–∏"""
        self.action_buttons_container = QWidget()
        self.action_buttons_container.setFixedSize(270, 120)
        
        buttons_layout = QVBoxLayout(self.action_buttons_container)
        buttons_layout.setContentsMargins(0, 8, 0, 0)
        buttons_layout.setSpacing(8)
        
        # –ö–Ω–æ–ø–∫–∞ "–í–ï–î–ï–ù–ù–Ø"
        self.view_btn = QPushButton("üìä –í–ï–î–ï–ù–ù–Ø")
        self.view_btn.setFixedSize(270, 36)
        self.view_btn.setStyleSheet(f"""
            QPushButton {{
                background: {COLORS['primary']};
                color: white;
                font-size: 14px;
                font-weight: 600;
                border: none;
                border-radius: 8px;
                padding: 8px;
            }}
            QPushButton:hover {{
                background: #2563eb;
            }}
            QPushButton:pressed {{
                background: #1d4ed8;
            }}
        """)
        
        # –ö–Ω–æ–ø–∫–∞ "–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø"
        self.message_btn = QPushButton("üí¨ –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø")
        self.message_btn.setFixedSize(270, 36)
        self.message_btn.setStyleSheet(f"""
            QPushButton {{
                background: {COLORS['secondary']};
                color: white;
                font-size: 14px;
                font-weight: 600;
                border: none;
                border-radius: 8px;
                padding: 8px;
            }}
            QPushButton:hover {{
                background: #7c3aed;
            }}
            QPushButton:pressed {{
                background: #6d28d9;
            }}
        """)
        
        # –ö–Ω–æ–ø–∫–∞ "–ê–Ü –ü–û–ú–Ü–ß–ù–ò–ö"
        self.ai_btn = QPushButton("ü§ñ –ê–Ü –ü–û–ú–Ü–ß–ù–ò–ö")
        self.ai_btn.setFixedSize(270, 36)
        self.ai_btn.setStyleSheet(f"""
            QPushButton {{
                background: {COLORS['info']};
                color: white;
                font-size: 14px;
                font-weight: 600;
                border: none;
                border-radius: 8px;
                padding: 8px;
            }}
            QPushButton:hover {{
                background: #0ea5e9;
            }}
            QPushButton:pressed {{
                background: #0284c7;
            }}
        """)
        
        # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏
        buttons_layout.addWidget(self.view_btn)
        buttons_layout.addWidget(self.message_btn)
        buttons_layout.addWidget(self.ai_btn)
        
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å–∏–≥–Ω–∞–ª–∏ (–ø–æ–∫–∏ —â–æ –∑–∞–≥–ª—É—à–∫–∏)
        self.view_btn.clicked.connect(lambda: self._show_development_message("–í–ï–î–ï–ù–ù–Ø"))
        self.message_btn.clicked.connect(lambda: self._show_development_message("–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø"))
        self.ai_btn.clicked.connect(lambda: self._show_development_message("–ê–Ü –ü–û–ú–Ü–ß–ù–ò–ö"))
        
    def _show_development_message(self, feature_name):
        """–ü–æ–∫–∞–∑—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–∫—É"""
        from qfluentwidgets import InfoBar, InfoBarPosition
        InfoBar.info(
            title="–í —Ä–æ–∑—Ä–æ–±—Ü—ñ",
            content=f"–§—É–Ω–∫—Ü—ñ—è '{feature_name}' –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP,
            duration=2000,
            parent=self.window()
        )
    
    def _load_photo(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ñ–æ—Ç–æ –∫–ª—ñ—î–Ω—Ç–∞ –∞–±–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–∞–≥–ª—É—à–∫—É"""
        photo_path = self.client_data.get('photo_path')
        
        if photo_path and os.path.exists(photo_path):
            # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ
            pixmap = QPixmap(photo_path)
            
            # –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ —Ä–æ–∑–º—ñ—Ä—É –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π
            scaled_pixmap = pixmap.scaled(
                270, 350, 
                Qt.KeepAspectRatioByExpanding, 
                Qt.SmoothTransformation
            )
            
            # –û–±—Ä—ñ–∑–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ —Ü–µ–Ω—Ç—Ä—É, —è–∫—â–æ –≤–æ–Ω–æ –±—ñ–ª—å—à–µ –∑–∞ —Ä–æ–∑–º—ñ—Ä
            if scaled_pixmap.width() > 270 or scaled_pixmap.height() > 350:
                x = (scaled_pixmap.width() - 270) // 2
                y = (scaled_pixmap.height() - 350) // 2
                scaled_pixmap = scaled_pixmap.copy(x, y, 270, 350)
                
            self.photo_widget.setPixmap(scaled_pixmap)
        else:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –∫—Ä–∞—Å–∏–≤—É –∑–∞–≥–ª—É—à–∫—É
            self._create_photo_placeholder()
            
    def _create_photo_placeholder(self):
        """–°—Ç–≤–æ—Ä—é—î –∫—Ä–∞—Å–∏–≤—É –∑–∞–≥–ª—É—à–∫—É –∑ —ñ–∫–æ–Ω–∫–æ—é –∫–∞–º–µ—Ä–∏"""
        pixmap = QPixmap(270, 350)
        pixmap.fill(QColor("#f8f9fa"))
        
        painter = QPainter(pixmap)
        painter.setRenderHint(QPainter.Antialiasing)
        
        # –ì—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π —Ñ–æ–Ω
        gradient = QLinearGradient(0, 0, 270, 350)
        colors = [
            ("#667eea", "#764ba2"),  # –§—ñ–æ–ª–µ—Ç–æ–≤–∏–π
            ("#f093fb", "#f5576c"),  # –†–æ–∂–µ–≤–∏–π
            ("#4facfe", "#00f2fe"),  # –ë–ª–∞–∫–∏—Ç–Ω–∏–π
            ("#43e97b", "#38f9d7"),  # –ó–µ–ª–µ–Ω–∏–π
            ("#fa709a", "#fee140"),  # –ñ–æ–≤—Ç–æ-—Ä–æ–∂–µ–≤–∏–π
        ]
        
        # –í–∏–±–∏—Ä–∞—î–º–æ –∫–æ–ª—ñ—Ä –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ–º–µ–Ω—ñ
        name = self.client_data.get('full_name', '')
        color_index = sum(ord(c) for c in name) % len(colors) if name else 0
        start_color, end_color = colors[color_index]
        
        gradient.setColorAt(0, QColor(start_color))
        gradient.setColorAt(1, QColor(end_color))
        
        # –ú–∞–ª—é—î–º–æ –≥—Ä–∞–¥—ñ—î–Ω—Ç
        painter.fillRect(0, 0, 270, 350, gradient)
        
        # –î–æ–¥–∞—î–º–æ —ñ–∫–æ–Ω–∫—É –∫–∞–º–µ—Ä–∏
        painter.setPen(QColor("white"))
        font = QFont()
        font.setPixelSize(60)
        painter.setFont(font)
        
        painter.drawText(0, 0, 270, 350, Qt.AlignCenter, "üì∑")
        
        # –î–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç "–ë–µ–∑ —Ñ–æ—Ç–æ"
        font.setPixelSize(16)
        painter.setFont(font)
        painter.drawText(0, 300, 270, 40, Qt.AlignCenter, "–ë–µ–∑ —Ñ–æ—Ç–æ")
        
        painter.end()
        self.photo_widget.setPixmap(pixmap)
    
    def _init_animations(self):
        """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∞–Ω—ñ–º–∞—Ü—ñ—ó"""
        self.scale_animation = QPropertyAnimation(self, b"geometry")
        self.scale_animation.setDuration(200)
        self.scale_animation.setEasingCurve(QEasingCurve.OutCubic)
    
    def enterEvent(self, event):
        """–ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ –º–∏—à—ñ"""
        super().enterEvent(event)
        
        # –ó–±—ñ–ª—å—à—É—î–º–æ —Ç—ñ–Ω—å
        self.shadow.setBlurRadius(35)
        self.shadow.setOffset(0, 10)
        
        # –õ–µ–≥–∫–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –ø—ñ–¥–π–æ–º—É
        current_rect = self.geometry()
        new_rect = QRect(
            current_rect.x() - 3,
            current_rect.y() - 3,
            current_rect.width() + 6,
            current_rect.height() + 6
        )
        self.scale_animation.setStartValue(current_rect)
        self.scale_animation.setEndValue(new_rect)
        self.scale_animation.start()
    
    def leaveEvent(self, event):
        """–ü—Ä–∏ –ø–æ–∫–∏–¥–∞–Ω–Ω—ñ –º–∏—à—ñ"""
        super().leaveEvent(event)
        
        # –ó–º–µ–Ω—à—É—î–º–æ —Ç—ñ–Ω—å
        self.shadow.setBlurRadius(25)
        self.shadow.setOffset(0, 6)
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–æ–∑–º—ñ—Ä
        current_rect = self.geometry()
        new_rect = QRect(
            current_rect.x() + 3,
            current_rect.y() + 3,
            current_rect.width() - 6,
            current_rect.height() - 6
        )
        self.scale_animation.setStartValue(current_rect)
        self.scale_animation.setEndValue(new_rect)
        self.scale_animation.start()
    
    def mousePressEvent(self, event):
        """–ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –∫–∞—Ä—Ç–∫—É"""
        if event.button() == Qt.LeftButton:
            self.clicked.emit(self.client_data.get('id', ''))
        # –ù–µ –≤–∏–∫–ª–∏–∫–∞—î–º–æ super(), —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É —Å–∏–≥–Ω–∞–ª—ñ–≤
        event.accept()
    
    def mouseReleaseEvent(self, event):
        """–ü—Ä–∏ –≤—ñ–¥–ø—É—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –º–∏—à—ñ"""
        # –ù–µ –≤–∏–∫–ª–∏–∫–∞—î–º–æ super(), —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É —Å–∏–≥–Ω–∞–ª—ñ–≤
        event.accept()
    
    def updateCardData(self, new_client_data: dict):
        """–û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ –∫–∞—Ä—Ç–∫–∏ —Ç–∞ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        self.client_data = new_client_data
        
        # –û—á–∏—â–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π layout
        layout = self.layout()
        if layout:
            while layout.count():
                child = layout.takeAt(0)
                if child.widget():
                    child.widget().deleteLater()
        
        # –ü–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑ –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
        self._init_ui()
        
        print(f"üîÑ PhotoCard –æ–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞: {new_client_data.get('full_name', '–ù–µ–≤—ñ–¥–æ–º–∏–π')}")
